{"version":3,"sources":["ApiKeys.js","components/AddArtists.js","components/AddClient.js","images/logo.png","components/ForgetPWForm.js","components/RegisterForm.js","components/SigninForm.js","config/SigninFormContainer.js","config/dataLinks.js","images/logo192.png","components/ScrollTop.js","components/SignoutForm.js","config/SignoutFormContainer.js","components/Filter.js","config/FilterContainer.js","components/Topbar.js","components/Routes.js","config/RootContainer.js","reducers/bookingInfo.js","reducers/userInfo.js","reducers/rootReducer.js","config/Store.js","config/BookingsStoreProviderContainer.js","App.js","serviceWorker.js","index.js","actions/userCreator.js","actions/bookingCreator.js","utils/getBookingValue.js","actions/useAxiosFetch.js","actions/useAxiosCRUD.js","components/BookingsStoreProvider.js","utils/dataFormatter.js"],"names":["stripePublicKey","miniOrangeAccessKey","AddArtists","tags","setTags","multiArtists","clearable","artists","label","artistOptions","Object","values","sort","a","b","artists1","state","toUpperCase","name","artists2","multiple","id","disableClearable","filterSelectedOptions","options","groupBy","option","getOptionLabel","value","onChange","event","renderInput","params","variant","placeholder","fullWidth","AddClient","client","setClient","useState","open","setOpen","setOptions","searchKey","setSearchKey","active","length","loading","setLoading","useEffect","async","config","method","headers","access_token","url","user_url","axios","clients","data","map","phone","meta","billing_phone","onOpen","onClose","onInputChange","reason","InputProps","endAdornment","Fragment","color","size","module","exports","useStyles","makeStyles","container1","display","margin","grow","flexGrow","container2","flexDirection","alignContent","button","marginLeft","marginRight","marginTop","marginBottom","ForgetPWForm","triggerOpen","didMountRef","useRef","userLogin","setUserLogin","classes","current","Dialog","DialogContent","DialogContentText","TextField","autoFocus","type","target","DialogActions","className","Button","onClick","reset_pw_url","response","status","alert","logo","require","theme","button1","maxWidth","width","height","breakpoints","down","maxHeight","RegisterForm","signinUser","username","setUsername","password","setPassword","email","setEmail","firstName","setFirstName","lastName","setLastName","company","setCompany","address","setAddress","city","setCity","stateAbbr","setStateAbbr","postcode","setPostcode","setPhone","disableSubmit","setDisableSubmit","onBackdropClick","src","alt","Grid","container","item","xs","required","register_nonce_url","nonceResponse","nonce","userFormData","FormData","set","register_url","regResponse","cookie","user_id","metaFormData","metaConfig","update_user_meta_url","metaResponse","nickName","loggedIn","error","disabled","button2","connect","dispatch","payload","initOpen","triggerForgetPW","setTriggerForgetPW","triggerRegister","setTriggerRegister","signinFormData","auth_url","user","isArtist","capabilities","staff_members","firstname","lastname","nickname","home_url","HOTM_BOOKING_API","services_url","artists_url","bookings_url","available_artists_url","instagram_url","term_url","stripe_charge_server","ScrollToTop","prevProps","this","props","location","pathname","window","scrollTo","children","Component","withRouter","userInfo","signoutUser","resetBooking","fontSize","Typography","align","bookingFilter","setFromDate","val","setToDate","setArtist","searchBooking","fromDate","toDate","artist","DialogTitle","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","title","up","sectionDesktop","alignItems","artistMenu","icon","external","userMenu","bookingValue","drawerOpen","setDrawerOpen","triggerSignin","setTriggerSignin","triggerSignout","setTriggerSignout","triggerFilter","setTriggerFilter","currentPath","bookingPage","eventsPage","menu","toggleDrawer","key","AppBar","position","Toolbar","IconButton","aria-label","Drawer","anchor","role","onKeyDown","List","ListItem","component","MaterialLink","Link","href","to","search","ListItemIcon","ListItemText","primary","edge","evt","preventDefault","style","Booking","lazy","ArtistBooking","Manage","Calendar","Routes","bookingStage","changeBookingStage","priceFactors","itemQty","useContext","BookingsStoreContext","services","servicesFetched","events","eventsFetched","setBookingValue","depositPayable","setDepositPayable","getBookingValue","items","getDepositPayable","CssBaseline","fallback","CircularProgress","exact","path","render","newBooking","bookings","stage","initPriceFactors","organic","pensionerRate","initDateAddr","bookingDate","bookingEnd","bookingAddr","initClientInfo","comment","balance","paid","bookingId","initAvailArtists","ids","recs","isLoading","hasErr","initActivation","servicesActive","artistsActive","bookingsActive","bookingTrigger","requestMethod","callMe","bookingData","today","Date","initBookingFilter","setDate","getDate","initUser","rootReducer","combineReducers","action","CHANGE_ORGANIC","assign","CHANGE_PENSIONER_RATE","LOAD_BOOKING","booking","with_organic","with_pensioner_rate","RESET_BOOKING","bookingDateAddr","SUBMIT_BOOKING","booking_date","booking_time","booking_end_time","event_address","CHANGE_BOOKING_STAGE","selectedArtist","order","SET_SELECTED_ARTIST","assignedArtists","ASSIGN_ARTISTS","artistIds","artist_id_list","clientInfo","total_amount","paid_amount","booking_id","ASSIGN_CLIENT","availArtists","GET_AVAIL_ARTISTS","RECEIVE_AVAIL_ARTISTS","list","rec","push","ERROR_AVAIL_ARTISTS","qty","itemId","INC_ITEM_QTY","DEC_ITEM_QTY","temp","quantities","i","toString","storeActivation","ACTIVATE_BOOKINGS","SEARCH_BOOKING","ADD_BOOKING","UPDATE_BOOKING","SAVE_BOOKING","SET_FROM_DATE","SET_TO_DATE","SET_ARTIST","SET_CLIENT","SIGN_IN","SIGN_OUT","store","createStore","reducer","applyMiddleware","thunk","storeCtrl","BookingsStoreProvider","createMuiTheme","palette","main","secondary","App","ThemeProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","toggleOrganic","togglePensionerRate","submitBooking","date","addr","changeSelectedArtist","getAvailArtist","json","incItemQty","decItemQty","setActivateBookings","addBooking","bookingInfo","updateBooking","saveBooking","assignArtists","assignClient","loadBooking","total","pensioner","keys","organicPrice","price","toFixed","totalBookingValue","dataFetchReducer","hasErrored","errorMessage","Error","useAxiosFetch","initialUrl","initialData","useReducer","didCancel","result","fetchData","convertArrayToObject","array","reduce","obj","isUpdating","errMessage","useAxiosCRUD","createData","updateData","createContext","artistId","clientId","String","moment","initFilter","bookingUrl","setBookingUrl","setServices","setServicesFetched","setArtists","artistsFetched","setArtistsFetched","setEvents","setEventsFetched","clientList","setClientList","clientsFetchTrigger","setClientsFetchTrigger","setClients","servicesData","serviceArr","cats","j","cat","description","sale_price","organic_add_price","timeOnsite","time_on_site","onlineBooking","online_booking","addOn","add_on","normaliseServices","artistsData","newFilter","artistArr","photo","bio","hashtag","replace","normaliseArtists","bookingsData","client_id","includes","getClientListFromBookings","Promise","allSettled","results","forEach","servicesMenu","serviceItems","start","end","artistNames","join","getEvents","Provider"],"mappings":"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","file":"static/js/main.68d11e7c.chunk.js","sourcesContent":["//stripe public key is used on the client and private key is used on the server\nexport const stripePrivateKey = \"sk_test_1g6jSdh7K3SUynkS8PHRrZzQ00zW2dZveq\"\nexport const stripePublicKey = \"pk_test_a0vfdte94kBhPrDqosS5OnPd00A0fS0egz\"\n// Client-ID : Client-Secret authentication\nexport const miniOrangeAccessKey = \"Basic ZEtkWDBTM0wwSERsOnAxMk9GeFNMczVVNXVxdEEyQnVTYkFuUg==\"","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nexport default function AddArtists({tags, setTags, multiArtists, clearable, artists, label}) {\n\n  const artistOptions = Object.values(artists).sort((a, b) => {\n    let artists1 = a.state.toUpperCase() + a.name\n    let artists2 = b.state.toUpperCase() + b.name\n    if (artists1 < artists2)\n      return -1\n    else if (artists1 > artists2)\n      return 1\n    else\n      return 0\n  })\n\n  const onChangeArtists = (event, value) => {\n    setTags(value)\n  }\n\n  return (\n    <Autocomplete\n      multiple={multiArtists}\n      id=\"artist-list\"\n      disableClearable={clearable}\n      filterSelectedOptions\n      options={artistOptions}\n      groupBy={option => option.state.toUpperCase()}\n      getOptionLabel={option => option.name}\n      value={tags}\n      onChange={onChangeArtists}\n      renderInput={params => (\n        <TextField\n          {...params}\n          variant=\"outlined\"\n          placeholder=\"Artist name\"\n          label={label}\n          fullWidth\n        />\n      )}\n  />\n)\n}","import React, { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { user_url, access_token } from '../config/dataLinks'\nimport axios from \"axios\"\n\nexport default function AddClient({client, setClient, label}) {\n  const [open, setOpen] = useState(false)\n  const [options, setOptions] = useState(client !== null ? [client] : [])\n  const [searchKey, setSearchKey] = useState('')\n  const active = open && searchKey.length >= 3\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n\n    if (active && !loading) {\n      (async () => {\n\n        const config = {\n          method: 'get',\n          headers: { 'Authorization': access_token },\n          url: user_url + '?search=' + searchKey\n        }\n\n        setLoading(true)\n        let clients = await axios(config)\n\n        setOptions(clients.data.map(client => {\n          return {\n            id: client.id,\n            name: client.name, \n            phone: client.meta.billing_phone[0]\n          }\n        }))\n        setLoading(false)\n\n      })()\n    }\n\n  }, [searchKey, active])\n\n  const handleChangeClient = (event, value) => {\n    setClient(value)\n  }\n\n  const handleChangeSearchKey = (event, value, reason) => {\n    if (reason === 'input')\n      setSearchKey(value)\n    else if (reason === 'clear')\n      setSearchKey('')\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    setSearchKey('')\n    setOptions([])\n  }\n\n  const getOptionLabel = option => {\n    return option.name + ' - ' + option.phone\n  }\n\n  return (\n    <Autocomplete\n      id=\"asynchronous-client\"\n      open={open}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      getOptionLabel={getOptionLabel}\n      options={options}\n      loading={loading}\n      value={client}\n      onChange={handleChangeClient}\n      onInputChange={handleChangeSearchKey}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label={label}\n          fullWidth\n          variant=\"outlined\"\n          placeholder=\"Client name or username\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  )\n}","module.exports = __webpack_public_path__ + \"static/media/logo.a36b5832.png\";","import React, { useState, useEffect, useRef } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { reset_pw_url } from '../config/dataLinks'\nimport axios from 'axios'\n\nconst useStyles = makeStyles(() => ({\n  container1: {\n    display: 'flex',\n    margin: 20\n  },\n  grow: {\n    flexGrow: 1\n  },\n  container2: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'center'\n  },\n  button: {\n    display: 'flex',\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 20,\n    marginBottom: 20\n  }\n}))\n\nexport default function ForgetPWForm({triggerOpen}) {\n  const [open, setOpen] = useState(false)\n  const didMountRef = useRef(false)\n  const [userLogin, setUserLogin] = useState('')\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (didMountRef.current)\n      setOpen(true)\n    else\n      didMountRef.current = true\n  }, [triggerOpen])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const onChangeUserLogin = event => {\n    setUserLogin(event.target.value)\n  }\n\n  const handleResetPW = async () => {\n    const url = reset_pw_url + userLogin\n\n    let response = await axios(url)\n\n    if (response.status === 200) {\n      let data = response.data\n\n      if (data.status === 'ok') {\n        alert('An email to reset your password has been sent to you.')\n        setOpen(false)\n      }\n      else {\n        alert('username or email not found')\n      }\n    }\n    else {\n      alert('username or email not found')\n    }\n  }\n\n  return (\n    <Dialog open={open}>\n    <DialogContent>\n        <DialogContentText>\n          To reset password, please enter your username or email.\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"username or email\"\n          type=\"userLogin\"\n          fullWidth\n          onChange={onChangeUserLogin}\n        />\n      </DialogContent>\n      <DialogActions className={classes.button}>\n        <Button variant=\"contained\" onClick={handleClose} color=\"primary\" fullWidth>\n          Cancel\n        </Button>\n        <Button variant=\"contained\" onClick={handleResetPW} color=\"primary\" fullWidth>\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}","import React, { useEffect, useState, useRef } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { register_nonce_url, register_url, update_user_meta_url } from '../config/dataLinks'\nimport axios from 'axios'\n\nconst logo = require('../images/logo.png')\n\nconst useStyles = makeStyles(theme => ({\n  container1: {\n    display: 'flex',\n    margin: 20\n  },\n  grow: {\n    flexGrow: 1\n  },\n  button1: {\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 10,\n    marginBottom: 10\n  },\n  logo: {\n    maxWidth: '50%',\n    width: 'auto',\n    height: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: 120,\n    }\n  }\n}))\n\nexport default function RegisterForm({triggerOpen, signinUser}) {\n  const [open, setOpen] = useState(false)\n  const didMountRef = useRef(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState('')\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [company, setCompany] = useState('')\n  const [address, setAddress] = useState('')\n  const [city, setCity] = useState('')\n  const [stateAbbr, setStateAbbr] = useState('')\n  const [postcode, setPostcode] = useState('')\n  const [phone, setPhone] = useState('')\n  const classes = useStyles()\n  const [disableSubmit, setDisableSubmit] = useState(true)\n\n  useEffect(() => {\n    if (username === '' || password === '' || email === '' || firstName === '' || lastName === '' || phone === '')\n      setDisableSubmit(true)\n    else\n      setDisableSubmit(false)\n  },[username, password, email, firstName, lastName, phone])\n\n  useEffect(() => {\n    if (didMountRef.current)\n      setOpen(true)\n    else\n      didMountRef.current = true\n  }, [triggerOpen])\n\n  const onChangeUsername = event => {\n    setUsername(event.target.value)\n  }\n\n  const onChangePassword = event => {\n    setPassword(event.target.value)\n  }\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value)\n  }\n\n  const onChangeFirstName = event => {\n    setFirstName(event.target.value)\n  }\n\n  const onChangeLastName = event => {\n    setLastName(event.target.value)\n  }\n\n  const onChangeCompany = event => {\n    setCompany(event.target.value)\n  }\n\n  const onChangeAddress = event => {\n    setAddress(event.target.value)\n  }\n\n  const onChangeCity = event => {\n    setCity(event.target.value)\n  }\n\n  const onChangeStateAbbr = event => {\n    setStateAbbr(event.target.value)\n  }\n\n  const onChangePostcode = event => {\n    setPostcode(event.target.value)\n  }\n\n  const onChangePhone= event => {\n    setPhone(event.target.value)\n  }\n\n  const handleRegister = async () => {\n\n    let nonceResponse = await axios(register_nonce_url)\n\n    if (nonceResponse.status === 200 && nonceResponse.data.status === 'ok') {\n      const nonce = nonceResponse.data.nonce\n\n      let userFormData = new FormData()\n      userFormData.set('username', username)\n      userFormData.set('user_pass', password)\n      userFormData.set('email', email)\n      userFormData.set('display_name', firstName + ' ' + lastName)\n      userFormData.set('nonce', nonce)\n\n      const config = {\n        method: 'post',\n        headers: {\"Content-Type\": 'multipart/form-data'},\n        url: register_url,\n        data: userFormData\n      }\n\n      let regResponse = await axios(config)\n\n      if (regResponse.status === 200 && regResponse.data.status === 'ok') {\n        const cookie = regResponse.data.cookie\n        const user_id = regResponse.data.user_id\n\n        let metaFormData = new FormData()\n        metaFormData.set('cookie', cookie)\n        metaFormData.set('billing_firstname', firstName)\n        metaFormData.set('billing_lastname', lastName)\n        metaFormData.set('billing_company', company)\n        metaFormData.set('billing_address_1', address)\n        metaFormData.set('billing_city', city)\n        metaFormData.set('billing_state', stateAbbr)\n        metaFormData.set('billing_postcode', postcode)\n        metaFormData.set('billing_phone', phone)\n\n        const metaConfig = {\n          method: 'post',\n          headers: {\"Content-Type\": 'multipart/form-data'},\n          url: update_user_meta_url,\n          data: metaFormData\n        }\n    \n        let metaResponse = await axios(metaConfig)\n\n        if (metaResponse.status === 200 && metaResponse.data.status === 'ok') {\n          const payload = {\n            firstName,\n            lastName,\n            nickName: firstName,\n            email: email,\n            id: user_id,\n            loggedIn: true\n          }\n          signinUser(payload)\n          alert('You are now registered for HOTM online booking!')\n          setOpen(false)\n        }\n        else {\n          alert(metaResponse.data.error)\n        }\n      }\n      else {\n        alert(regResponse.data.error)\n      }\n    }\n    else {\n      alert(nonceResponse.data.error)\n    }\n  }\n\n  return (\n    <Dialog open={open} onBackdropClick={() => setOpen(false)}>\n      <div className={classes.container1}>\n        <div className={classes.grow} />\n        <img className={classes.logo} src={logo} alt=\"Hair on the move logo\" />\n        <div className={classes.grow} />\n      </div>\n      <DialogContent>\n        <Grid container>\n          <Grid item xs={6}>\n            <TextField\n              autoFocus\n              required\n              margin=\"dense\"\n              label=\"username\"\n              type=\"username\"\n              fullWidth\n              onChange={onChangeUsername}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              required\n              margin=\"dense\"\n              label=\"password\"\n              type=\"password\"\n              fullWidth\n              onChange={onChangePassword}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              margin=\"dense\"\n              label=\"email\"\n              type=\"email\"\n              fullWidth\n              onChange={onChangeEmail}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              required\n              margin=\"dense\"\n              label=\"first name\"\n              type=\"firstname\"\n              fullWidth\n              onChange={onChangeFirstName}\n            />\n          </Grid>  \n          <Grid item xs={6}>\n            <TextField\n              required\n              margin=\"dense\"\n              label=\"last name\"\n              type=\"lastname\"\n              fullWidth\n              onChange={onChangeLastName}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              margin=\"dense\"\n              label=\"company\"\n              type=\"company\"\n              fullWidth\n              onChange={onChangeCompany}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              margin=\"dense\"\n              label=\"address\"\n              type=\"address\"\n              fullWidth\n              onChange={onChangeAddress}\n            />\n          </Grid>  \n          <Grid item xs={6}>\n            <TextField\n              margin=\"dense\"\n              label=\"city\"\n              type=\"city\"\n              fullWidth\n              onChange={onChangeCity}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              margin=\"dense\"\n              label=\"postcode\"\n              type=\"postcode\"\n              fullWidth\n              onChange={onChangePostcode}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              margin=\"dense\"\n              label=\"state abbr.\"\n              type=\"state\"\n              fullWidth\n              onChange={onChangeStateAbbr}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              required\n              margin=\"dense\"\n              label=\"phone\"\n              type=\"phone\"\n              fullWidth\n              onChange={onChangePhone}\n            />\n          </Grid>  \n        </Grid>\n      </DialogContent>\n      <DialogActions className={classes.button1}>\n        <Button variant=\"contained\" onClick={handleRegister} color=\"primary\" fullWidth disabled={disableSubmit}>\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}","import React, { useEffect, useState, useRef } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { auth_url } from '../config/dataLinks'\nimport axios from 'axios'\nimport ForgetPWForm from './ForgetPWForm'\nimport RegisterForm from './RegisterForm'\n\nconst logo = require('../images/logo.png')\n\nconst useStyles = makeStyles(theme => ({\n  container1: {\n    display: 'flex',\n    margin: 20\n  },\n  container2: {\n    display: 'flex'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  button1: {\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 20\n  },\n  button2: {\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  logo: {\n    maxWidth: '50%',\n    width: 'auto',\n    height: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: 120,\n    }\n  }\n}))\n\nexport default function SigninForm({theme, triggerOpen, signinUser, initOpen}) {\n  const [open, setOpen] = useState(false)\n  const didMountRef = useRef(false)\n  const[username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [triggerForgetPW, setTriggerForgetPW] = useState(false)\n  const [triggerRegister, setTriggerRegister] = useState(false)\n\n  const classes = useStyles(theme)\n\n  useEffect(() => {\n    if (didMountRef.current) {\n      setOpen(true)\n    }\n    else {\n      didMountRef.current = true\n      setOpen(initOpen)\n    }\n  }, [triggerOpen, initOpen])\n\n  const onChangeUsername = event => {\n    setUsername(event.target.value)\n  }\n\n  const onChangePassword = event => {\n    setPassword(event.target.value)\n  }\n\n  const handleSignin = async () => {\n    let signinFormData = new FormData()\n    signinFormData.set('username', username)\n    signinFormData.set('password', password)\n\n    const config = {\n      method: 'post',\n      headers: {\"Content-Type\": 'multipart/form-data'},\n      url: auth_url,\n      data: signinFormData\n    }\n\n    let response = await axios(config)\n\n    if (response.status === 200 && response.data.user) {\n      let user = response.data.user\n      let isArtist = false\n      if (user.capabilities.staff_members)\n        isArtist = true\n      const payload = {\n        firstName: user.firstname,\n        lastName: user.lastname,\n        nickName: user.nickname,\n        email: user.email,\n        id: user.id,\n        loggedIn: true,\n        isArtist: isArtist\n      }\n      signinUser(payload)\n      setOpen(false)\n    }\n    else {\n      alert('login failed')\n    }\n  }\n\n  const handleForget = () => {\n    setOpen(false)\n    setTriggerForgetPW(!triggerForgetPW)\n  }\n\n  const handleRegister = () => {\n    setOpen(false)\n    setTriggerRegister(!triggerRegister)\n  }\n\n  return (\n    <>\n      <Dialog open={open} onBackdropClick={() => setOpen(false)}>\n        <div className={classes.container1}>\n          <div className={classes.grow} />\n          <img className={classes.logo} src={logo} alt=\"Hair on the move logo\" />\n          <div className={classes.grow} />\n        </div>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"username or email\"\n            type=\"username\"\n            fullWidth\n            onChange={onChangeUsername}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"password\"\n            type=\"password\"\n            fullWidth\n            onChange={onChangePassword}\n          />\n        </DialogContent>\n        <DialogActions className={classes.button1}>\n          <Button variant=\"contained\" onClick={handleSignin} color=\"primary\" fullWidth>\n            Sign in\n          </Button>\n        </DialogActions>\n        <DialogActions className={classes.container2}>\n          <div className={classes.grow} />\n          <Button variant=\"text\" onClick={handleForget} color=\"primary\">\n            Forget password?\n          </Button>\n          <div className={classes.grow} />\n        </DialogActions>\n        <div className={classes.container2}>\n          <div className={classes.grow} />\n          <p>OR</p>\n          <div className={classes.grow} />\n        </div>\n        <DialogActions className={classes.button2}>\n          <Button variant=\"contained\" onClick={handleRegister} color=\"primary\" fullWidth>\n            Register\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <ForgetPWForm triggerOpen={triggerForgetPW}/>\n      <RegisterForm triggerOpen={triggerRegister} signinUser={signinUser}/>\n    </>\n  )\n}","import { connect } from 'react-redux'\nimport { signinUser } from '../actions/userCreator'\nimport SigninForm from '../components/SigninForm'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signinUser: (payload) => dispatch(signinUser(payload))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SigninForm)","import { miniOrangeAccessKey } from '../ApiKeys'\n/*\n * Hair On the Move 2 U Home page\n */\nexport const home_url = \"https://procomhost.com\"\n// export const home_url = \"https://appvelation.app\"\n\n\n/*\n * The active custom booking api\n */\nconst HOTM_BOOKING_API = home_url + \"/hotm_booking/api/v0.8\"\nexport const services_url = HOTM_BOOKING_API + \"/services\"\nexport const artists_url = HOTM_BOOKING_API + \"/artists\"\nexport const bookings_url = HOTM_BOOKING_API + \"/bookings\"\nexport const available_artists_url = HOTM_BOOKING_API + '/get_available_artists.php'\n\n/*\n * Simulated data for testing\n */\n// export const artists_url = 'http://localhost:5000/artists'\n// export const bookings_url = 'http://localhost:5000/bookings'\n\n/*\n * JSON API Auth & JSON API User Plugin\n */\nexport const register_nonce_url = home_url + \"/api/get_nonce/?controller=user&method=register\"\nexport const register_url = home_url + \"/api/user/register\"\nexport const update_user_meta_url = home_url + \"/api/user/update_user_meta_vars\"\nexport const auth_url = home_url + \"/api/auth/generate_auth_cookie\"\nexport const reset_pw_url = home_url + \"/api/user/retrieve_password/?user_login=\"\n\n/*\n * miniOrange API Authentication\n */\nexport const user_url = home_url + \"/wp-json/wp/v2/users\"\n// Use relative path in development mode to make use of proxy\n// export const user_url = \"/wp-json/wp/v2/users\"\n// Client-ID : Client-Secret authentication\nexport const access_token = miniOrangeAccessKey\n\n/*\n * Instagram root for artists\n */\nexport const instagram_url = \"https://www.instagram.com/explore/tags/\"\n\n/*\n * Hair On the Move 2 U Terms & Conditions\n */\nexport const term_url = home_url + \"/terms-conditions/\"\n\n/*\n * Stripe charge server running on Node.js deployed to Heroku\n */\nexport const stripe_charge_server = \"https://boiling-shore-55046.herokuapp.com/charge\"","module.exports = __webpack_public_path__ + \"static/media/logo192.4d162816.png\";","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location.pathname !== prevProps.location.pathname) {\n        window.scrollTo(0, 0);\n      }\n    }\n\n    render() {\n      return this.props.children;\n    }\n  }\n\n  export default withRouter(ScrollToTop);","import React, { useState, useEffect, useRef} from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\n\n\nconst useStyles = makeStyles(() => ({\n  container1: {\n    display: 'flex',\n    margin: 20\n  },\n  grow: {\n    flexGrow: 1\n  },\n  container2: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'center'\n  },\n  button: {\n    display: 'flex',\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 20,\n    marginBottom: 20\n  }\n}))\n\nexport default function SignoutForm({firstName, lastName, email, triggerOpen, signoutUser, resetBooking}) {\n  const [open, setOpen] = useState(false)\n  const didMountRef = useRef(false)\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (didMountRef.current)\n      setOpen(true)\n    else\n      didMountRef.current = true\n  }, [triggerOpen])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSignout = () => {\n    signoutUser()\n    resetBooking()\n    setOpen(false)\n  }\n\n  return (\n    <Dialog maxWidth='xs' fullWidth open={open}>\n      <div className={classes.container1}>\n        <div className={classes.grow} />\n        <ExitToAppIcon color='primary' fontSize='large'/>\n        <div className={classes.grow} />\n      </div>\n      <DialogContent className={classes.container2}>\n        <Typography variant='h6' align='center'>\n          {firstName + ' ' + lastName}\n        </Typography>\n        <Typography variant='body2' align='center'>\n          {email}\n        </Typography>\n      </DialogContent>  \n      <DialogActions className={classes.button}>\n        <Button variant=\"contained\" onClick={handleClose} color=\"primary\" fullWidth>\n          Cancel\n        </Button>\n        <Button variant=\"contained\" onClick={handleSignout} color=\"primary\" fullWidth>\n          Sign out\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}","import { connect } from 'react-redux'\nimport { signoutUser } from '../actions/userCreator'\nimport { resetBooking } from '../actions/bookingCreator'\nimport SignoutForm from '../components/SignoutForm'\n\nconst mapStateToProps = state => {\n  return {\n    firstName: state.userInfo.firstName,\n    lastName: state.userInfo.lastName,\n    email: state.userInfo.email\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signoutUser: () => dispatch(signoutUser()),\n    resetBooking: () => dispatch(resetBooking())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignoutForm)","import React, { useEffect, useState, useRef } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { makeStyles } from '@material-ui/core/styles'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers'\nimport AddArtists from './AddArtists'\nimport AddClient from './AddClient'\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 20,\n    marginBottom: 20\n  }\n}))\n\nexport default function Filter({\n  theme,\n  artists,\n  triggerOpen, \n  bookingFilter,\n  setFromDate,\n  setToDate,\n  setArtist,\n  setClient,\n  searchBooking}) {\n\n  const {fromDate, toDate, artist, client} = bookingFilter\n  const [open, setOpen] = useState(false)\n  const didMountRef = useRef(false)\n\n  const classes = useStyles(theme)\n\n  useEffect(() => {\n    if (didMountRef.current)\n      setOpen(true)\n    else\n      didMountRef.current = true\n  }, [triggerOpen])\n\n  const handleSearch = () => {\n    searchBooking()\n    setOpen(false)\n  }\n  \n  return (\n    <Dialog open={open} onBackdropClick={() => setOpen(false)}>\n      <DialogTitle id=\"simple-dialog-title\">Filters for booking search</DialogTitle>\n      <DialogContent>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"dd/MM/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            label=\"Select from date\"\n            value={fromDate}\n            onChange={setFromDate}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"dd/MM/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            label=\"Select to date\"\n            value={toDate}\n            onChange={setToDate}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n        </MuiPickersUtilsProvider>\n        <br/>\n        <br/>\n        <AddArtists\n          artists={artists}\n          multiArtists={false}\n          clearable={false}\n          setTags={setArtist}\n          tags={artist}\n          label=\"Select artist\"\n        />\n        <br/>\n        <AddClient\n          setClient={setClient}\n          client={client}\n          label=\"Select client\"\n        />\n      </DialogContent>\n      <DialogActions className={classes.button}>\n        <Button variant=\"contained\" onClick={handleSearch} color=\"primary\" fullWidth>\n          Search\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}","import { connect } from 'react-redux'\nimport { setFromDate, setToDate, setArtist, setClient, searchBooking } from '../actions/bookingCreator'\nimport Filter from '../components/Filter'\n\nconst mapStateToProps = state => {\n  return {\n    bookingFilter: state.bookingFilter\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFromDate: (val) => dispatch(setFromDate(val)),\n    setToDate: (val) => dispatch(setToDate(val)),\n    setArtist: (val) => dispatch(setArtist(val)),\n    setClient: (val) => dispatch(setClient(val)),\n    searchBooking: () => dispatch(searchBooking()) \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link, withRouter } from 'react-router-dom'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport AppBar from '@material-ui/core/AppBar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Drawer from '@material-ui/core/Drawer'\nimport { Link as MaterialLink, Typography } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport EventIcon from '@material-ui/icons/Event'\nimport LinkIcon from '@material-ui/icons/Link'\nimport CreateIcon from '@material-ui/icons/Create'\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport LockIcon from '@material-ui/icons/Lock'\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nimport SigninForm from '../config/SigninFormContainer'\nimport SignoutForm from '../config/SignoutFormContainer'\nimport Filter from '../config/FilterContainer'\nimport { home_url } from '../config/dataLinks'\n\nconst logo = require('../images/logo192.png')\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  sectionDesktop: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n}))\n\nconst artistMenu = [\n  {\n    label: \"Add a booking\",\n    pathname: \"/\",\n    icon: <AddIcon />\n  },\n  {\n    label: \"Artist add a booking\",\n    pathname: \"/artist\",\n    icon: <CreateIcon />\n  },\n  {\n    label: \"Manage bookings\",\n    pathname: \"/manage\",\n    icon: <LibraryBooksIcon />\n  },\n  {\n    label: \"Booking calendar\",\n    pathname: \"/calendar\",\n    icon: <EventIcon />\n  },\n  {\n    label: \"Go to Hair on the Move\",\n    pathname: home_url,\n    external: true,\n    icon: <LinkIcon />\n  }\n];\n\nconst userMenu = [\n  {\n    label: \"Add a booking\",\n    pathname: \"/\",\n    icon: <AddIcon />\n  },\n  {\n    label: \"Go to Hair on the Move\",\n    pathname: home_url,\n    external: true,\n    icon: <LinkIcon />\n  }\n];\n\nfunction Topbar ({location, bookingValue, loggedIn, isArtist, artists}) {\n  const classes = useStyles()\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const [triggerSignin, setTriggerSignin] = useState(false)\n  const [triggerSignout, setTriggerSignout] = useState(false)\n  const [triggerFilter, setTriggerFilter] = useState(false)\n  const currentPath = location.pathname\n  const bookingPage = currentPath === '/' || currentPath === '/artist'\n  const eventsPage = currentPath === '/manage' || currentPath === '/calendar'\n  const menu = isArtist ? artistMenu : userMenu\n  \n  const toggleDrawer = (open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return\n    }\n\n    setDrawerOpen(open)\n  }\n\n  const handleUser = evt => {\n    evt.preventDefault()\n    if (loggedIn)\n      setTriggerSignout(!triggerSignout)\n    else\n      setTriggerSignin(!triggerSignin)\n  }\n\n  const handleFilter = evt => {\n    evt.preventDefault()\n    setTriggerFilter(!triggerFilter)\n  }\n\n  let title\n\n  switch (currentPath) {\n    case '/calendar':\n      title = 'Booking calendar'\n      break\n    case '/manage':\n      title = 'Manage bookings'\n      break\n    case '/artist':\n      title = 'Artist add a booking'\n      break\n    default:\n      title = 'Add a booking'\n  }\n\n  return (\n    <div className={classes.grow}>\n      <AppBar color=\"secondary\" position='static'>\n        <Toolbar>\n          <img width={60} src={logo} alt=\"Hair on the move logo\" />\n          <React.Fragment>\n            <IconButton onClick={toggleDrawer(true)} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <div className={classes.title}>\n              <Typography variant='h6'>{ title }</Typography>\n            </div>\n            <Drawer anchor=\"left\" open={drawerOpen} onClose={toggleDrawer(false)}>\n              <div\n                role=\"presentation\"\n                onClick={toggleDrawer(false)}\n                onKeyDown={toggleDrawer(false)}\n              >\n                <List>\n                  {menu.map(item => (\n                    <ListItem \n                      component={item.external ? MaterialLink : Link} \n                      href={item.external ? item.pathname : null} \n                      to={item.external ? null : {pathname: item.pathname, search: location.search}} \n                      button key={item.label}\n                      target={item.external ? \"_blank\" : null}\n                    >\n                      <ListItemIcon>{item.icon}</ListItemIcon>\n                      <ListItemText primary={item.label} />\n                    </ListItem>\n                  ))}\n                </List>\n              </div>\n            </Drawer>\n          </React.Fragment>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {bookingPage && \n            <React.Fragment>\n              <AccountBalanceWalletIcon fontSize='small'/>\n              <span>{' $' + bookingValue}</span>\n            </React.Fragment>}\n            {eventsPage && \n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              onClick={handleFilter}\n            >\n              <FilterListIcon/>\n            </IconButton>}\n            <IconButton\n              edge=\"end\"\n              color=\"default\"\n              onClick={handleUser}\n            >\n              {loggedIn ? <AccountCircleIcon color='primary'/> : <LockIcon style={{color: 'white'}}/>}\n            </IconButton>\n          </div>\n        </Toolbar>\n        <SignoutForm triggerOpen={triggerSignout}/> \n        <SigninForm triggerOpen={triggerSignin} initOpen={false}/>\n        <Filter triggerOpen={triggerFilter} artists={artists}/> \n      </AppBar>\n    </div>\n  )\n}\n\nexport default withRouter(Topbar)\n","import React, { useState, useEffect, useContext, Suspense, lazy } from \"react\"\nimport { Route, Switch, HashRouter } from \"react-router-dom\"\nimport ScrollToTop from './ScrollTop'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Topbar from './Topbar'\nimport { BookingsStoreContext } from './BookingsStoreProvider'\nimport { getBookingValue, getDepositPayable } from '../utils/getBookingValue'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n//Use route based lazy loading to split the code to smaller chunks\nconst Booking = lazy(() => import('../pages/Booking'))\nconst ArtistBooking = lazy(() => import('../pages/ArtistBooking'))\nconst Manage = lazy(() => import('../config/ManageContainer'))\nconst Calendar = lazy(() => import('../pages/Calendar'))\n\n// import Booking from '../pages/Booking'\n// import ArtistBooking from '../pages/ArtistBooking'\n// import Manage from  '../config/ManageContainer'\n// import Calendar from '../pages/Calendar'\n\n/**\n * For deploy testing frontend without backend\n */\nconst Routes = ({ theme, bookingStage, changeBookingStage, resetBooking, priceFactors, itemQty, loggedIn, isArtist }) => {\n  const { services, servicesFetched, events, eventsFetched, artists } = useContext(BookingsStoreContext)\n  const [bookingValue, setBookingValue] = useState(0)\n  const [depositPayable, setDepositPayable] = useState(0)\n\n  useEffect(() => {\n    setBookingValue(getBookingValue(services.items, priceFactors, itemQty))\n    setDepositPayable(getDepositPayable(bookingValue))\n  }, [services.items, priceFactors, itemQty, bookingValue])\n  \n  return (\n    <HashRouter>\n      <ScrollToTop>\n        <CssBaseline />\n        <Topbar bookingValue={bookingValue} loggedIn={loggedIn} isArtist={isArtist} artists={artists}/>\n        <Suspense fallback={<CircularProgress/>}>\n        {servicesFetched &&\n          <Switch>\n            <Route exact path='/' render={() => \n              <Booking \n                theme={theme} \n                services={services} \n                bookingStage={bookingStage} \n                changeBookingStage={changeBookingStage} \n                bookingValue={bookingValue}\n                depositPayable={depositPayable}\n                artists={artists}\n                resetBooking={resetBooking}/>} \n            />\n            <Route exact path='/artist' render={() => \n              <ArtistBooking \n                theme={theme} \n                services={services} \n                bookingStage={bookingStage} \n                changeBookingStage={changeBookingStage} \n                bookingValue={bookingValue}\n                depositPayable={depositPayable}\n                artists={artists}\n                newBooking={true}\n                resetBooking={resetBooking}/>} \n            />\n            <Route path='/manage' render={() => \n              <Manage \n                events={events} \n                eventsFetched={eventsFetched}\n                services={services} \n                bookingStage={bookingStage} \n                changeBookingStage={changeBookingStage} \n                bookingValue={bookingValue}\n                depositPayable={depositPayable}\n                artists={artists}/>} \n            />\n            <Route path='/calendar' render={() => <Calendar events={events} />} />\n          </Switch>}\n        </Suspense>\n      </ScrollToTop>\n    </HashRouter>\n  )\n}\n\nexport default Routes","import { connect } from 'react-redux'\nimport Routes from '../components/Routes'\nimport { changeBookingStage, resetBooking } from '../actions/bookingCreator'\n\nconst mapStateToProps = state => {\n  return {\n    priceFactors: state.priceFactors,\n    itemQty: state.itemQty,\n    artists: state.artists,\n    clients: state.clients,\n    bookings: state.bookings,\n    bookingStage: state.bookingStage.stage,\n    loggedIn: state.userInfo.loggedIn,\n    isArtist: state.userInfo.isArtist\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeBookingStage: stage => dispatch(changeBookingStage(stage)),\n    resetBooking: () => dispatch(resetBooking())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes)","import {\n  CHANGE_ORGANIC,\n  CHANGE_PENSIONER_RATE,\n  CHANGE_BOOKING_STAGE,\n  SET_SELECTED_ARTIST,\n  INC_ITEM_QTY,\n  DEC_ITEM_QTY,\n  SUBMIT_BOOKING,\n  GET_AVAIL_ARTISTS,\n  RECEIVE_AVAIL_ARTISTS,\n  ERROR_AVAIL_ARTISTS,\n  ACTIVATE_BOOKINGS,\n  SEARCH_BOOKING,\n  ADD_BOOKING,\n  SAVE_BOOKING,\n  UPDATE_BOOKING,\n  RESET_BOOKING,\n  ASSIGN_ARTISTS,\n  ASSIGN_CLIENT,\n  LOAD_BOOKING,\n  SET_FROM_DATE,\n  SET_TO_DATE,\n  SET_ARTIST,\n  SET_CLIENT\n} from '../actions/bookingCreator'\n\nconst initPriceFactors = {\n  organic: false,\n  pensionerRate: false\n}\n\nexport function priceFactors(state = initPriceFactors, action) {\n  switch (action.type) {\n    case CHANGE_ORGANIC: {\n      return Object.assign({}, state, {\n        organic: !state.organic\n      })\n    }\n    case CHANGE_PENSIONER_RATE: {\n      return Object.assign({}, state, {\n        pensionerRate: !state.pensionerRate\n      })\n    }\n    case LOAD_BOOKING: {\n      return Object.assign({}, {\n        organic: action.booking.with_organic === 1 ? true : false,\n        pensionerRate: action.booking.with_pensioner_rate === 1 ? true : false\n      })\n    }\n    case RESET_BOOKING: {\n      return initPriceFactors\n    }\n    default:\n      return state\n  }\n}\n\nconst initDateAddr = {\n  bookingDate: null,\n  bookingEnd: null,\n  bookingAddr: ''\n}\n\nexport function bookingDateAddr(state = initDateAddr, action) {\n  switch (action.type) {\n    case SUBMIT_BOOKING: {\n      return {\n        bookingDate: action.bookingDate,\n        bookingEnd: action.bookingEnd,\n        bookingAddr: action.bookingAddr\n      }\n    }\n    case LOAD_BOOKING: {\n      const booking = action.booking\n      return {\n        bookingDate: new Date(booking.booking_date + ' ' + booking.booking_time + ':00'),\n        bookingEnd: new Date(booking.booking_date + ' ' + booking.booking_end_time + ':00'),\n        bookingAddr: booking.event_address\n      }\n    }\n    case RESET_BOOKING: {\n      return initDateAddr\n    }\n    default:\n      return state\n  }\n}\n\nexport function bookingStage(state = {stage: 0}, action) {\n  switch (action.type) {\n    case CHANGE_BOOKING_STAGE: {\n      return Object.assign({}, state, {\n        stage: action.stage\n      })\n    }\n    case RESET_BOOKING: {\n      return {stage: 0}\n    }\n    default:\n      return state\n  }\n}\n\n/*\n * A list of artists assigned to a job. Only use non-mutating array methods.\n */\nexport function assignedArtists(state = [], action) {\n  switch (action.type) {\n    case ASSIGN_ARTISTS: {\n      return action.artistIds\n    }\n    case LOAD_BOOKING: {\n      return action.booking.artist_id_list\n    }\n    case RESET_BOOKING: {\n      return []\n    }\n    default:\n      return state\n  }\n}\n\nconst initClientInfo = {\n  client: null,\n  comment: '',\n  balance: null,\n  paid: null,\n  bookingId : null\n}\nexport function clientInfo(state = initClientInfo, action) {\n  switch (action.type) {\n    case LOAD_BOOKING: { \n      return Object.assign({}, {\n        client: action.booking.client,\n        comment: action.booking.comment,\n        balance: action.booking.total_amount - action.booking.paid_amount,\n        paid: action.booking.paid_amount,\n        bookingId: action.booking.booking_id\n      })\n    }\n    case ASSIGN_CLIENT: {\n      return Object.assign({}, state, {\n        client: action.client\n      })\n    }\n    case RESET_BOOKING: {\n      return initClientInfo\n    }\n    default:\n      return state\n  }\n}\n\n/*\n * Client selected single artist\n */\nexport function selectedArtist(state = {order: 0}, action) {\n  switch (action.type) {\n    case SET_SELECTED_ARTIST: { \n      return Object.assign({}, state, {\n        order: action.order\n      })\n    }\n    case RESET_BOOKING: {\n      return {order: 0}\n    }\n    default:\n      return state\n  }\n}\n\nconst initAvailArtists = {\n  ids: [],\n  recs: [],\n  isLoading: false,\n  hasErr: false\n}\nexport function availArtists(state = initAvailArtists, action) {\n  switch (action.type) {\n    case GET_AVAIL_ARTISTS: {\n      return Object.assign({}, state, {\n        ids: [],\n        recs: [],\n        isLoading: true,\n        hasErr: false\n      })\n    }\n    case RECEIVE_AVAIL_ARTISTS: {\n      let list = []\n      let recs = action.payload\n\n      for (let rec of recs) {\n        list.push(rec.artist_id_list[0])\n      }\n  \n      return Object.assign({}, state, {\n        isLoading: false,\n        hasErr: false,\n        ids: list,\n        recs: recs\n      })\n    }\n    case ERROR_AVAIL_ARTISTS: {\n      return Object.assign({}, state, {\n        ids: [],\n        recs: [],\n        isLoading: false,\n        hasErr: true\n      })\n    }\n    case RESET_BOOKING: {\n      return initAvailArtists\n    }\n    default:\n      return state\n  }\n}\n\nexport function itemQty(state = {}, action) {\n  let qty = 0\n  let id = action.itemId\n  if (id in state) {\n    qty = state[id]\n  }\n\n  switch (action.type) {\n    case INC_ITEM_QTY: {\n      qty += 1\n      return Object.assign({}, state, {\n        [id]: qty\n      })\n    }\n    case DEC_ITEM_QTY: {\n      if (qty > 0) {\n        qty -= 1\n      }      \n      \n      if (qty > 0) {\n        return Object.assign({}, state, {\n          [id]: qty\n        })\n      } else {\n        let temp = Object.assign({}, state)\n        //remove the empty item\n        delete temp[id]\n        return Object.assign({}, temp)\n      }\n    }\n    case LOAD_BOOKING: {\n      const services = action.booking.services\n      const quantities = action.booking.quantities\n      let temp = {}\n\n      for (let i = 0; i < services.length; i++ ) {\n        temp[services[i].toString()] = quantities[i]\n      }\n      return Object.assign({}, temp)\n    }\n    case RESET_BOOKING: {\n      return {}\n    }\n    default:\n      return state\n  }\n}\n\nconst initActivation = {\n  servicesActive: true,\n  artistsActive: true,\n  bookingsActive: false,\n  bookingTrigger: false,\n  requestMethod: 'get',\n  data: {},\n  callMe: null,\n  bookingData: {}\n}\n\nexport function storeActivation(state = initActivation, action) {\n  switch (action.type) {\n    case ACTIVATE_BOOKINGS: {\n      return Object.assign({}, state, {\n        bookingsActive: action.val,\n        requestMethod: 'get'\n      })\n    }\n    case SEARCH_BOOKING: {\n      return Object.assign({}, state, {\n        bookingsActive: true,\n        requestMethod: 'get',\n        bookingTrigger: !state.bookingTrigger\n      })\n    }\n    //create a new booking on the server\n    case ADD_BOOKING: {\n      return Object.assign({}, state, {\n        bookingsActive: true,\n        requestMethod: 'post',\n        data: action.payload,\n        bookingTrigger: !state.bookingTrigger,\n        callMe: action.callMe\n      })\n    }\n    //modify an existing booking on the server\n    case UPDATE_BOOKING: {\n      return Object.assign({}, state, {\n        bookingsActive: true,\n        requestMethod: 'put',\n        data: action.payload,\n        bookingTrigger: !state.bookingTrigger,\n        callMe: action.callMe\n      })\n    }\n    /*\n     * Save booking information in an object as required by submission format for later use.\n     * This is different from LOAD_BOOKING which initializes the booking state from an existing booking.\n     */\n    case SAVE_BOOKING: {\n      return Object.assign({}, state, {\n        bookingData: action.payload\n      })\n    }\n    case RESET_BOOKING: {\n      return initActivation\n    }\n    default:\n      return state\n  }\n}\n\nconst today = new Date()\n\nconst initBookingFilter = {\n  fromDate: new Date(),\n  toDate: today.setDate(today.getDate() + 7),\n  artist: null,\n  client: null\n}\n\nexport function bookingFilter(state = initBookingFilter, action) {\n  switch (action.type) {\n    case SET_FROM_DATE: {\n      return Object.assign({}, state, {\n        fromDate: action.val\n      })\n    }\n    case SET_TO_DATE: {\n      return Object.assign({}, state, {\n        toDate: action.val\n      })\n    }\n    case SET_ARTIST: {\n      return Object.assign({}, state, {\n        artist: action.val\n      })\n    }\n    case SET_CLIENT: {\n      return Object.assign({}, state, {\n        client: action.val\n      })\n    }\n    default:\n      return state\n  }\n}","import {SIGN_IN, SIGN_OUT} from '../actions/userCreator'\n\nconst initUser = {\n  firstName: '',\n  lastName: '',\n  nickName: '',\n  email: '',\n  id: '',\n  phone: '',\n  loggedIn: false,\n  isArtist: false\n}\n\nexport function userInfo(state = initUser, action) {\n  switch (action.type) {\n    case SIGN_IN: {\n      return Object.assign({}, state, {\n        firstName: action.payload.firstName,\n        lastName: action.payload.lastName,\n        nickName: action.payload.nickName,\n        email: action.payload.email,\n        id: action.payload.id,\n        loggedIn: action.payload.loggedIn,\n        isArtist: action.payload.isArtist\n      })\n    }\n    case SIGN_OUT: {\n      return Object.assign({}, initUser)\n    }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport {\n  priceFactors,\n  bookingDateAddr,\n  bookingStage,\n  selectedArtist,\n  assignedArtists,\n  clientInfo,\n  availArtists,\n  itemQty,\n  storeActivation,\n  bookingFilter\n} from './bookingInfo'\n\nimport { userInfo } from './userInfo'\n\nconst rootReducer = combineReducers({\n  priceFactors,\n  bookingDateAddr,\n  bookingStage,\n  selectedArtist,\n  assignedArtists,\n  clientInfo,\n  availArtists,\n  itemQty,\n  storeActivation,\n  bookingFilter,\n  userInfo,\n})\n\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from '../reducers/rootReducer'\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n)\n\nexport default store","import { connect } from 'react-redux'\nimport { BookingsStoreProvider } from '../components/BookingsStoreProvider'\n\nconst mapStateToProps = state => {\n  return {\n    storeCtrl : state.storeActivation,\n    bookingFilter: state.bookingFilter\n  }\n}\n\nexport default connect(mapStateToProps, null)(BookingsStoreProvider)","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport './App.css';\nimport Routes from './config/RootContainer'\nimport store from './config/Store'\nimport BookingsStoreProvider from './config/BookingsStoreProviderContainer'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#f18383'\n    },\n    secondary: {\n      // main: '#e8e5e5'\n      main: '#000'\n    }\n  },\n  // typography: {\n  //   // Use the system font instead of the default Roboto font.\n  //   fontFamily: [\n  //     '\"Lato\"',\n  //     'sans-serif'\n  //   ].join(',')\n  // }\n});\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <BookingsStoreProvider>\n            <Routes theme={theme}/>\n          </BookingsStoreProvider>\n        </ThemeProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export const SIGN_IN = 'SIGN_IN'\nexport const SIGN_OUT = 'SIGN_OUT'\n\nexport const signinUser = (payload) => ({\n  type: SIGN_IN,\n  payload\n})\n\nexport const signoutUser = () => ({\n  type: SIGN_OUT,\n})\n","export const CHANGE_ORGANIC = 'CHANGE_ORGANIC'\nexport const CHANGE_PENSIONER_RATE = 'CHANGE_PENSIONER_RATE'\nexport const SUBMIT_BOOKING = 'SUBMIT_BOOKING'\nexport const CHANGE_BOOKING_STAGE = 'CHANGE_BOOKING_STAGE'\nexport const SET_SELECTED_ARTIST = 'SET_SELECTED_ARTIST'\nexport const INC_ITEM_QTY = 'INC_ITEM_QTY'\nexport const DEC_ITEM_QTY = 'DEC_ITEM_QTY'\nexport const GET_AVAIL_ARTISTS = 'GET_AVAIL_ARTISTS'\nexport const RECEIVE_AVAIL_ARTISTS = 'RECEIVE_AVAIL_ARTISTS'\nexport const ERROR_AVAIL_ARTISTS = 'ERROR_AVAIL_ARTISTS'\nexport const RESET_BOOKING = 'RESET_BOOKING'\nexport const MAKE_BOOKING = 'MAKE_BOOKING'\nexport const ACTIVATE_BOOKINGS = 'ACTIVATE_BOOKINGS'\nexport const SEARCH_BOOKING = 'SEARCH_BOOKING'\nexport const ADD_BOOKING = 'ADD_BOOKING'\nexport const SAVE_BOOKING = 'SAVE_BOOKING'\nexport const UPDATE_BOOKING = 'UPDATE_BOOKING'\nexport const ASSIGN_ARTISTS = 'ASSIGN_ARTISTS'\nexport const ASSIGN_CLIENT = 'ASSIGN_CLIENT'\nexport const LOAD_BOOKING = 'LOAD_BOOKING'\nexport const SET_FROM_DATE = 'SET_FROM_DATE'\nexport const SET_TO_DATE = 'SET_TO_DATE'\nexport const SET_ARTIST = 'SET_ARTIST'\nexport const SET_CLIENT = 'SET_CLIENT'\n\nexport const toggleOrganic = () => ({\n  type: CHANGE_ORGANIC\n})\n\nexport const togglePensionerRate = () => ({\n  type: CHANGE_PENSIONER_RATE\n})\n\nexport const submitBooking = (date, bookingEnd, addr) => ({\n  type: SUBMIT_BOOKING,\n  bookingDate: date,\n  bookingEnd: bookingEnd,\n  bookingAddr: addr\n})\n\nexport const changeBookingStage = stage => ({\n  type: CHANGE_BOOKING_STAGE,\n  stage\n})\n\nexport const changeSelectedArtist = order => ({\n  type: SET_SELECTED_ARTIST,\n  order\n})\n\nexport function getAvailArtist(url) {\n  return function(dispatch) {\n    \n    dispatch({\n      type: GET_AVAIL_ARTISTS\n    })\n\n    return fetch(url)\n    .then(\n      response => response.json(),\n      error => {\n        console.log(\"Artists fetching error\")\n        dispatch({\n          type: ERROR_AVAIL_ARTISTS\n        })\n      }\n    )\n    .then(data => {\n      dispatch({\n        type: RECEIVE_AVAIL_ARTISTS,\n        payload: data\n      })\n    })\n  }\n}\n\nexport const incItemQty = id => ({\n  type: INC_ITEM_QTY,\n  itemId: id\n})\n\nexport const decItemQty = id => ({\n  type: DEC_ITEM_QTY,\n  itemId: id\n})\n\nexport const resetBooking = () => ({\n  type: RESET_BOOKING,\n})\n\nexport const setActivateBookings = val => ({\n  type : ACTIVATE_BOOKINGS,\n  val\n})\n\nexport const searchBooking = () => ({\n  type : SEARCH_BOOKING\n})\n\nexport const addBooking = (bookingInfo, callMe) => ({\n  type: ADD_BOOKING,\n  payload: bookingInfo,\n  callMe\n})\n\nexport const updateBooking = (bookingInfo, callMe) => ({\n  type: UPDATE_BOOKING,\n  payload: bookingInfo,\n  callMe\n})\n\nexport const saveBooking = (bookingData) => ({\n  type: SAVE_BOOKING,\n  payload: bookingData,\n})\n\nexport const assignArtists = (artistIds) => ({\n  type: ASSIGN_ARTISTS,\n  artistIds\n})\n\nexport const assignClient = (client) => ({\n  type: ASSIGN_CLIENT,\n  client\n})\n\nexport const loadBooking = (booking) => ({\n  type: LOAD_BOOKING,\n  booking\n})\n\nexport const setFromDate = (val) => ({\n  type: SET_FROM_DATE,\n  val\n})\n\nexport const setToDate = (val) => ({\n  type: SET_TO_DATE,\n  val\n})\n\nexport const setClient = (val) => ({\n  type: SET_CLIENT,\n  val\n})\n\nexport const setArtist = (val) => ({\n  type: SET_ARTIST,\n  val\n})","export const getBookingValue = (items, priceFactors, itemQty) => {\n  let total = 0\n  let organic = priceFactors.organic\n  let pensioner = priceFactors.pensionerRate\n\n  for (let id of Object.keys(itemQty)) {\n    let qty = itemQty[id]\n    total += (organic ? items[id].organicPrice : items[id].price) * (pensioner ? 0.8 : 1) * qty\n  }\n  \n  return total.toFixed(2)\n}\n\nexport const getDepositPayable = (totalBookingValue) => {\n  return (totalBookingValue * 0.3).toFixed(2)\n}\n","import { useState, useEffect, useReducer } from \"react\"\nimport axios from \"axios\"\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return { ...state, isLoading: true, hasErrored: false }\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        hasErrored: false,\n        errorMessage: \"\",\n        data: action.payload\n      }\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        hasErrored: true,\n        errorMessage: \"Data Retrieve Failure\"\n      }\n    default:\n      throw new Error()\n  }\n}\n\nconst useAxiosFetch = (initialUrl, initialData, active) => {\n  const [url] = useState(initialUrl)\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    hasErrored: false,\n    errorMessage: \"\",\n    data: initialData\n  })\n\n  useEffect(() => {\n    let didCancel = false\n\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_INIT\" })\n\n      try {\n        let result = await axios.get(url)\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data })\n        }\n      } catch (err) {\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_FAILURE\" })\n        }\n      }\n    }\n\n    if (active) {\n      fetchData()\n    }\n\n    return () => {\n      didCancel = true\n    }\n  }, [url, active])\n\n  return { ...state }\n}\n\nexport default useAxiosFetch\n","import { useState, useEffect, useReducer } from \"react\"\nimport axios from \"axios\"\n\nconst convertArrayToObject = (array, key) => {\n  const initialValue = {};\n  return array.reduce((obj, item) => {\n    return {\n      ...obj,\n      [item[key].toString()]: item,\n    };\n  }, initialValue)\n}\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isUpdating: false,\n        hasErrored: false\n      }\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isUpdating: false,\n        hasErrored: false,\n        errorMessage: \"\",\n        // data: Object.assign({}, state.data, convertArrayToObject(action.payload, 'booking_id'))\n        data: Object.assign({}, convertArrayToObject(action.payload, 'booking_id'))\n      }\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isUpdating: false,\n        hasErrored: true,\n        errorMessage: \"Data Retrieve Failure\"\n      }\n    case \"UPDATE_INIT\":\n      return {\n        ...state,\n        isLoading: false,\n        isUpdating: true,\n        hasErrored: false\n      }\n    case \"POST_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isUpdating: false,\n        hasErrored: false,\n        errorMessage: \"\",\n        data: Object.assign({}, state.data, convertArrayToObject([action.payload], 'booking_id'))\n      }\n    case \"PUT_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isUpdating: false,\n        hasErrored: false,\n        errorMessage: \"\",\n        data: Object.assign({}, state.data, convertArrayToObject([action.payload], 'booking_id'))\n      }\n    case \"DELETE_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isUpdating: false,\n        hasErrored: false,\n        errorMessage: \"\"\n      }\n    case \"UPDATE_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isUpdating: false,\n        hasErrored: true,\n        errorMessage: action.errMessage\n      }\n  \n    default:\n      throw new Error()\n  }\n}\n\nconst useAxiosCRUD = (url, initialData, active, method, data, callMe, bookingTrigger) => {\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isUpdating: false,\n    hasErrored: false,\n    errorMessage: \"\",\n    data: initialData\n  })\n\n  useEffect(() => {\n    let didCancel = false\n\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_INIT\" })\n\n      try {\n        let result = await axios.get(url)\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data })\n        }\n      } catch (err) {\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_FAILURE\" })\n        }\n      }\n    }\n\n    const createData = async (data) => {\n      dispatch({ type: \"UPDATE_INIT\"})\n\n      const config = {\n        method: 'post',\n        headers: {\"Content-Type\": \"application/json\"},\n        url: url,\n        data: data\n      }\n\n      try {\n        let result = await axios(config)\n        let bookingId = result.data.booking_id\n        if (!didCancel) {\n          if (bookingId > 0) {\n            let payload = {...data, booking_id: bookingId}\n            dispatch({ type: \"POST_SUCCESS\", payload: payload })\n            callMe()\n          }\n          else {\n            alert(result.data.error + ' Please call to resolve this issue.')\n          }\n        }\n      } catch (err) {\n        if (!didCancel) {\n          dispatch({ type: \"UPDATE_FAILURE\", errorMessage: err })\n        }\n      }\n    }\n\n    const updateData = async (data) => {\n      dispatch({ type: \"UPDATE_INIT\"})\n\n      const config = {\n        method: 'put',\n        headers: {\"Content-Type\": \"application/json\"},\n        url: url,\n        data: data\n      }\n\n      try {\n        let result = await axios(config)\n        let bookingId = result.data.booking_id\n        if (!didCancel) {\n          if (bookingId > 0) {\n            /*\n             * Balance payment success. Change paid_amount to total_amount locally. Server performs this step. Because \n             * we don't read back the updated booking record from the server, we simply modify paid_amount locally.\n             */ \n            if (data.paid_amount > 0)\n              data.paid_amount = data.total_amount\n            dispatch({ type: \"PUT_SUCCESS\", payload: data })\n            callMe()\n          }\n          else {\n            alert(result.data.error + ' Please call to resolve this issue.')\n          }\n        }\n      } catch (err) {\n        if (!didCancel) {\n          dispatch({ type: \"UPDATE_FAILURE\", errorMessage: err })\n        }\n      }\n    }\n\n    if (active && !state.isLoading && !state.isUpdating) {\n      switch (method) {\n        case 'get': {\n          fetchData()\n          break\n        }\n        case 'post': {\n          createData(data)\n          break\n        }\n        case 'put': {\n          updateData(data)\n          break\n        }\n        default:\n          throw new Error()\n      }\n    }\n\n    return () => {\n      didCancel = true\n    }\n  }, [active, method, data, bookingTrigger])\n\n  return { ...state }\n}\n\nexport default useAxiosCRUD\n","import React, { useState, useEffect, createContext } from \"react\"\nimport useAxiosFetch from '../actions/useAxiosFetch'\nimport useAxiosCRUD from '../actions/useAxiosCRUD'\nimport { normaliseArtists, normaliseServices } from '../utils/dataFormatter'\nimport { bookings_url, user_url, access_token, artists_url, services_url } from '../config/dataLinks'\nimport { getEvents } from '../utils/dataFormatter'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst BookingsStoreContext = createContext()\n\nconst initFilter = (fromDate, toDate) => {\n  return new String (bookings_url + '?from_date=' + moment(fromDate).format(\"YYYY-MM-DD\") + '&to_date=' + moment(toDate).format(\"YYYY-MM-DD\"))\n}\n\nconst BookingsStoreProvider = ({children, storeCtrl, bookingFilter}) => {\n  const {servicesActive, artistsActive, bookingsActive, requestMethod, data, callMe, bookingTrigger} = storeCtrl\n  const {fromDate, toDate} = bookingFilter\n  const artistId = bookingFilter.artist ? bookingFilter.artist.id : null\n  const clientId = bookingFilter.client ? bookingFilter.client.id : null\n  const [bookingUrl, setBookingUrl] = useState(initFilter(fromDate, toDate))\n  const [services, setServices] = useState({})\n  const [servicesFetched, setServicesFetched] = useState(false)\n  const [artists, setArtists] = useState({})\n  const [artistsFetched, setArtistsFetched] = useState(false)\n  const [events, setEvents] = useState([])\n  const [eventsFetched, setEventsFetched] = useState(false)\n  const [clientList, setClientList] = useState([])\n  const [clientsFetchTrigger, setClientsFetchTrigger] = useState(false)\n  const [clients, setClients] = useState({})\n\n  let servicesData = useAxiosFetch(services_url, [], servicesActive)\n\n  useEffect(() => {\n    if (servicesData.data.length !== 0) {\n      setServices(normaliseServices(servicesData.data))\n      setServicesFetched(true)\n    }\n  }, [servicesData.isLoading, servicesData.data])\n\n  let artistsData = useAxiosFetch(artists_url, [], artistsActive)\n\n  //update booking filter\n  useEffect(() => {\n    let newFilter = new String(bookings_url + '?from_date=' + moment(fromDate).format(\"YYYY-MM-DD\"))\n\n    newFilter = newFilter + '&to_date=' + moment(toDate).format(\"YYYY-MM-DD\")\n    \n    if (artistId)\n      newFilter = newFilter + '&artist_id=' + artistId.toString()\n\n    if (clientId)\n    newFilter = newFilter + '&client_id=' + clientId.toString()\n\n    setBookingUrl(newFilter)\n  }, [fromDate, toDate, artistId, clientId])\n\n  useEffect(() => {\n    if (artistsData.data.length !== 0) {\n      setArtists(normaliseArtists(artistsData.data))\n      setArtistsFetched(true)\n    }\n  }, [artistsData.isLoading, artistsData.data])\n\n  let bookingsData = useAxiosCRUD(bookingUrl, {}, bookingsActive, requestMethod, data, callMe, bookingTrigger)\n\n  const getClientListFromBookings = bookings => {\n    let list = []\n    for (let key in bookings) {\n      let client_id = bookings[key].client_id\n      if (!list.includes(client_id))\n        list.push(client_id)\n    }\n\n    return list\n  }\n\n  useEffect(() => {\n    if (bookingsData.data.length !== 0) {\n      setClientList(getClientListFromBookings(bookingsData.data))\n    }\n  }, [bookingsData.isLoading, bookingsData.data])\n\n  useEffect(() => {\n    if (clientList.length > 0) {\n      \n      Promise.allSettled(clientList.map(id => {\n        const config = {\n          method: 'get',\n          headers: { 'Authorization': access_token },\n          url: user_url + '/' + id\n        }\n        return axios(config)\n      }))\n      .then((results) => {\n        let temp = {}\n        results.forEach(result => {\n          if (result.status === 'fulfilled') {\n            let client = result.value.data\n            let id = client.id\n            temp[id.toString()] = {\n              id,\n              name: client.name,\n              phone: client.meta.billing_phone[0]\n            }\n          }\n        })\n        setClients(temp)\n        setClientsFetchTrigger(!clientsFetchTrigger)\n      })\n    }\n  }, [clientList])\n\n  useEffect(() => {\n    if (artistsFetched && servicesFetched) {\n      setEvents(getEvents(bookingsData.data, artists, clients, services.items))\n      setEventsFetched(true)\n    }\n  }, [clientsFetchTrigger, clients])\n\n  return (\n    <BookingsStoreContext.Provider value={{services, servicesFetched, events, eventsFetched, artists, artistsFetched, bookingsData}}>\n      {children}\n    </BookingsStoreContext.Provider>\n  )\n}\n\nexport { BookingsStoreContext, BookingsStoreProvider }","import { getBookingValue } from './getBookingValue'\n\nexport function normaliseArtists(artistArr)\n{\n  let artists = {}\n  \n  for (let i = 0; i < artistArr.length; i++ ) {\n    artists[artistArr[i].id.toString()] = {\n      id: artistArr[i].id,\n      name: artistArr[i].name,\n      state: artistArr[i].state,\n      photo: artistArr[i].photo,\n      title: artistArr[i].title,\n      bio: artistArr[i].bio,\n      hashtag: artistArr[i].hashtag ? artistArr[i].hashtag.replace('#', '') : \"haironthemove2u\"\n    }\n  }\n  \n  return artists\n}\n\nexport function normaliseClients(clientArr)\n{\n  let clients = {}\n  \n  for (let i = 0; i < clientArr.length; i++ ) {\n    clients[clientArr[i].id.toString()] = {\n      id: clientArr[i].id,\n      name: clientArr[i].name,\n      phone: clientArr[i].phone\n    }\n  }\n\n  return clients\n}\n\nexport function normaliseServices(serviceArr)\n{\n  let services = {}\n  let cats = []\n  \n  for (let i = 0; i < serviceArr.length; i++ ) {\n    let items = Object.values(serviceArr[i].data)\n    let list = []\n    for (let j = 0; j < items.length; j++ ) {\n      let id = items[j].id.toString()\n      list.push(id)\n      services[id] = {\n        cat: i,\n        description: items[j].description,\n        price: items[j].sale_price,\n        organicPrice: items[j].organic_add_price,\n        timeOnsite: items[j].time_on_site,\n        onlineBooking: items[j].online_booking === 1 ? true : false,\n        addOn: items[j].add_on === 1 ? true : false\n      }\n    }\n    cats.push({\n      \"name\": serviceArr[i].cat,\n      \"list\": list\n    })\n  }\n  return { \n    \"items\": services, \n    \"cats\": cats\n  }\n}\n\nexport function getEvents(bookings, artists, clients, servicesMenu)\n{\n  let events = []\n\n  for (let id in bookings) {\n    let serviceItems = []\n    let total = 0\n    let booking = bookings[id]\n\n    //artist && client still exist\n    if (artists[booking.artist_id_list[0]] && clients[booking.client_id]) {\n      let itemQty = {}\n      let priceFactors = {\n        organic: booking.with_organic,\n        pensionerRate: booking.with_pensioner_rate\n      }\n      for (let j = 0; j < booking.services.length; j++) {\n        //Don't know why services contain invalid id. The random id is constrained to a valid range.\n        if (servicesMenu[booking.services[j]]) {\n          serviceItems.push(servicesMenu[booking.services[j]].description + ' Qty ' + booking.quantities[j])\n          itemQty[booking.services[j]] = booking.quantities[j]\n        }\n      }\n\n      total = getBookingValue(servicesMenu, priceFactors, itemQty)\n      events.push({\n        id: booking.booking_id,\n        start: new Date(booking.booking_date + 'T' + booking.booking_time + ':00'),\n        end: new Date(booking.booking_date + 'T' + booking.booking_end_time + ':00'),\n        address: booking.event_address,\n        artists: booking.artist_id_list.map(id => artists[id]),\n        artistNames: booking.artist_id_list.map(id => artists[id].name).join(', '),\n        client: clients[booking.client_id],\n        organic: booking.with_organic,\n        serviceItems: serviceItems,\n        total: total\n      })\n    }\n  }\n\n  return events\n}"],"sourceRoot":""}