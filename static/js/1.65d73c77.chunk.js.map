{"version":3,"sources":["components/StripeForm.js","components/ServiceMenu.js","config/ServiceMenuContainer.js","components/LocationSearchInput.js","components/ServiceSelection.js","config/ServiceSelectionContainer.js","components/ArtistBookingSteps.js","components/AddPeople.js","config/AddPeopleContainer.js","components/ArtistPayment.js","config/ArtistPaymentContainer.js","pages/ArtistBooking.js"],"names":["useStyles","makeStyles","stripe","marginTop","marginBottom","InjectedCardForm","injectStripe","loggedIn","handleCharge","payMessage","useState","errorMessage","setErrorMessage","classes","className","onSubmit","evt","a","async","preventDefault","createToken","result","token","alert","console","log","onChange","error","message","hidePostalCode","style","base","letterSpacing","color","invalid","role","variant","fullWidth","type","disabled","StripeForm","stripePublicKey","apiKey","theme","paper","width","overflowX","background","backgroundColor","palette","primary","main","priceField","display","breakpoints","up","priceEmbedded","connect","state","itemQty","dispatch","incItemQty","id","decItemQty","items","cat","organic","pensioner","artistBooking","listOpen","setListOpen","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","name","toUpperCase","IconButton","onClick","e","edge","padding","fontSize","Badge","badgeContent","total","list","totalItems","showZero","TableBody","map","key","description","addOn","organicPrice","price","toFixed","onlineBooking","ButtonGroup","Button","startIcon","container","flexWrap","paddingBottom","textField","searchOptions","componentRestrictions","country","LocationSearchInput","address","changeAddr","value","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","Container","FormControl","InputLabel","htmlFor","Input","placeholder","startAdornment","InputAdornment","position","suggestion","active","cursor","flex","grow","flexGrow","Info","Alert","elevation","severity","ServiceSelection","services","pensionerRate","bookingDate","bookingAddr","toggleOrganic","togglePensionerRate","submitBooking","getAvailArtist","changeSelectedArtist","newBooking","setManageState","cats","selectedDate","setSelectedDate","setAddress","useEffect","handleDateChange","date","getBookingEnd","duration","Object","keys","qty","timeOnsite","getTime","checkBookingRules","allAddOn","forEach","getDay","now","Date","ahead24hrs","bookingTime","legalBookingTime","maxWidth","paddingTop","FormControlLabel","control","Switch","checked","label","utils","DateFnsUtils","Grid","justify","disableToolbar","format","margin","KeyboardButtonProps","event","url","available_artists_url","moment","values","missingFields","priceFactors","bookingDateAddr","bookingEnd","addr","ArtistBookingSteps","props","activeStep","steps","getSteps","Stepper","alternativeLabel","Step","StepLabel","Typography","gutterBottom","stepIndex","getStepContent","spacing","text","secondary","acknowledge","alignItems","inline","AddPeople","saveBooking","assignedArtists","clientInfo","assignArtists","assignClient","changeBookingStage","bookingValue","depositPayable","artists","tags","setTags","disableNext","setDisableNext","client","setClient","length","ids","AddArtists","multiArtists","clearable","AddClient","Chip","deleteIcon","onDelete","tag","Number","start_time","bookingData","artist_id_list","booking_date","booking_time","booking_end_time","artist_start_time","booking_id","bookingId","created_datetime","event_address","quantities","unit_prices","time_on_site","travel_distance","travel_duration","client_id","with_organic","with_pensioner_rate","paid_balance_total","paid_deposit_total","total_amount","paid_amount","paid","paid_type","comment","status","artistsIds","ArtistPayment","resetBooking","addBooking","updateBooking","manageState","setValue","checkOutable","successNotification","toString","process","fetch","stripe_charge_server","method","headers","body","JSON","stringify","amount","ok","TextField","multiline","target","storeActivation","bookingInfo","callMe","withRouter","bookingStage","Fragment"],"mappings":"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","file":"static/js/1.65d73c77.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport {\n  CardElement,\n  injectStripe,\n  StripeProvider,\n  Elements,\n} from 'react-stripe-elements'\n\nconst useStyles = makeStyles(() => ({\n  stripe: {\n    marginTop: 20,\n    marginBottom: 20\n  }\n}))\n\nconst createOptions = () => {\n  return {\n    hidePostalCode: true,\n    style: {\n      base: {\n        letterSpacing: '0.025em',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#c23d4b',\n      },\n    }\n  }\n}\n\nfunction CardForm ({loggedIn, stripe, handleCharge, payMessage}) {\n  const [errorMessage, setErrorMessage] = useState('')\n  const classes = useStyles()\n\n  const handleChange = ({error}) => {\n    if (error) {\n      setErrorMessage(error.message)\n    }\n  }\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault()\n    if (stripe) {\n      let result = await stripe.createToken()\n      if (result.token) {\n        // alert(\"Payment token was created successfully\")\n        handleCharge(result.token)\n      }\n      else {\n        alert(\"Payment token creation failed\")\n      }\n    } else {\n      console.log(\"Stripe.js hasn't loaded yet.\")\n    }\n  }\n\n  return (\n    <div className={classes.stripe}>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Card details\n          <CardElement\n            onChange={handleChange}\n            {...createOptions()}\n          />\n        </label>\n        <div className={classes.stripe} role=\"alert\">\n          {errorMessage}\n        </div>\n        <Button variant=\"contained\" color=\"primary\" fullWidth type='submit' disabled={!loggedIn}>{payMessage}</Button>\n      </form>\n    </div>\n  )\n}\n\nconst InjectedCardForm = injectStripe(CardForm)\n\nexport default function StripeForm({stripePublicKey, handleCharge, loggedIn, payMessage}) {\n  return (\n    <StripeProvider apiKey={stripePublicKey}>\n      <Elements>\n        <InjectedCardForm handleCharge={handleCharge} loggedIn={loggedIn} payMessage={payMessage}/>\n      </Elements>\n    </StripeProvider>\n  )\n}","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport PhoneEnabledIcon from '@material-ui/icons/PhoneEnabled'\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Badge from '@material-ui/core/Badge'\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  background: {\n    backgroundColor: theme.palette.primary.main\n  },\n  priceField: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline',\n    }\n  },\n  priceEmbedded: {\n    display: 'inline',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    }\n  }\n}))\n\nexport default function ServiceMenu({ theme, items, cat, organic, pensioner, itemQty, incItemQty, decItemQty, artistBooking }) {\n  const classes = useStyles(theme)\n  const [ listOpen, setListOpen ] = useState(false)\n\n  const toggleListOpen = (e) => { setListOpen(!listOpen) }\n\n  const totalItems = (cat, itemQty) => {\n    let total = 0\n    for (let id of cat.list) {\n      total += (itemQty[id] ? itemQty[id] : 0)\n    }\n    return total\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        <TableHead className={classes.background}>\n          <TableRow>\n            <TableCell align=\"left\" style={{width: \"60%\"}}>\n              {cat.name.toUpperCase()}\n              <IconButton onClick={toggleListOpen} edge='start'>\n                {listOpen ? <ArrowDropUpIcon/> : <ArrowDropDownIcon/>}\n              </IconButton>\n            </TableCell>\n            <TableCell align=\"right\" style={{width: \"30%\", padding: 0}}>\n              <div className={classes.priceField}>\n                <AttachMoneyIcon fontSize=\"small\" color=\"inherit\"/>\n              </div>\n            </TableCell>\n            <TableCell align=\"right\" style={{width: \"10%\"}}>\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={totalItems(cat, itemQty)} showZero>\n                  <ShoppingCartIcon/>\n                </Badge>\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {listOpen ?\n          <TableBody>\n            {cat.list.map(id => (\n              <TableRow key={id}>\n                <TableCell align=\"left\" style={{width: \"60%\"}}>\n                  {items[id].description + (items[id].addOn ? '*' : '')}\n                  <div className={classes.priceEmbedded}>\n                    { ` - $${((organic ? items[id].organicPrice : items[id].price) * (pensioner ? 0.8 : 1)).toFixed(2)}` }\n                  </div>\n                </TableCell>\n                <TableCell align=\"right\" style={{width: \"30%\", padding: 0}}>\n                  <div className={classes.priceField}>\n                    {((organic ? items[id].organicPrice : items[id].price) * (pensioner ? 0.8 : 1)).toFixed(2)}\n                  </div>\n                </TableCell>\n                {items[id].onlineBooking || artistBooking ?\n                  <TableCell align=\"right\" style={{width: \"10%\"}}>\n                    <ButtonGroup>\n                      <Button \n                        variant=\"text\" \n                        startIcon={<AddIcon fontSize=\"small\"/>}\n                        onClick={() => incItemQty(id)}\n                      >\n                        {itemQty[id] ? itemQty[id] : 0} \n                      </Button>\n                      <IconButton onClick={() => decItemQty(id)}>\n                        <RemoveIcon fontSize=\"small\"/>\n                      </IconButton>\n                    </ButtonGroup>\n                  </TableCell>\n                  : \n                  <TableCell align=\"center\" style={{width: \"10%\"}}>\n                    <PhoneEnabledIcon/>\n                  </TableCell>\n                }\n              </TableRow>\n            ))}\n          </TableBody>\n          : null\n        }\n      </Table> \n    </Paper>\n  )\n\n}\n","import { connect } from 'react-redux'\nimport { incItemQty, decItemQty } from '../actions/bookingCreator'\nimport ServiceMenu from '../components/ServiceMenu'\n\nconst mapStateToProps = state => {\n  return {\n    itemQty: state.itemQty\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      incItemQty: id => dispatch(incItemQty(id)),\n      decItemQty: id => dispatch(decItemQty(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceMenu)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\n\nimport PlacesAutocomplete from 'react-places-autocomplete'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: 0,\n    paddingBottom: 20\n  },\n  textField: {\n    width: \"100%\"\n  }\n}))\n\n//Constrain Google Places API to search within Australia only\nconst searchOptions = {\n  componentRestrictions: {\n    country: 'au'\n  }\n}\n\nexport default function LocationSearchInput ({ address, changeAddr}) {\n  const classes = useStyles()\n\n  return (\n    <PlacesAutocomplete\n      value={address}\n      onChange={changeAddr}\n      onSelect={changeAddr}\n      searchOptions={searchOptions}\n    >\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n        <Container className={classes.container}>\n          <FormControl className={classes.textField}>\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Enter booking location</InputLabel>\n            <Input\n              {...getInputProps({\n                placeholder: 'Booking location ...'\n              })}\n              startAdornment={\n                <InputAdornment position=\"start\">\n                  <AddLocationIcon />\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n          <div>\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item'\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#f0e0e0', cursor: 'pointer' }\n                  : { backgroundColor: 'white', cursor: 'pointer' }\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    {suggestion.description}\n                  </div>\n                );\n              })}\n          </div>\n        </Container>\n      )}\n    </PlacesAutocomplete>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Grid from '@material-ui/core/Grid'\nimport Alert from '@material-ui/lab/Alert'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers'\n\nimport ServiceMenu from '../config/ServiceMenuContainer'\n\nimport LocationSearchInput from './LocationSearchInput'\n\nimport { available_artists_url } from '../config/dataLinks'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n  flex: {\n    display: 'flex',\n  },\n  grow: {\n    flexGrow: 1,\n  }\n}))\n\nfunction Info() {\n  return (\n    <Alert elevation={6} severity=\"info\" variant=\"outlined\" style={{marginTop: 10}}>\n      Appointments between 8am to 6pm can be booked online, at least 24 hours before the appointment.\n    </Alert>\n  )\n}\n\nconst ServiceSelection = ({ \n  theme, \n  services,\n  itemQty, \n  onSubmit, \n  organic, \n  pensionerRate, \n  bookingDate, \n  bookingAddr, \n  toggleOrganic, \n  togglePensionerRate, \n  submitBooking,\n  getAvailArtist,\n  changeSelectedArtist,\n  artistBooking,\n  newBooking,\n  setManageState }) => {\n  \n  const classes = useStyles()\n  const items = services.items\n  const cats = services.cats\n  const [selectedDate, setSelectedDate] = useState(bookingDate)\n  const [address, setAddress] = useState(bookingAddr)\n  \n  useEffect(() => {\n    setSelectedDate(bookingDate)\n    setAddress(bookingAddr)\n  }, [bookingAddr, bookingDate])\n\n  const missingFields = () => {\n    let qty = 0\n    for (let id of Object.keys(itemQty)) {\n      qty += itemQty[id]\n    }\n    \n    return !(qty > 0 && address && selectedDate)\n  }\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  }\n\n  const handleAddrChange = address => {\n    setAddress(address)\n  }\n\n  const getBookingEnd = () => {\n    let duration = 0\n    for (let id of Object.keys(itemQty)) {\n      let qty = itemQty[id]\n      duration += items[id].timeOnsite * qty\n    }\n    //timeOnsite is minutes\n    return selectedDate.getTime() + duration * 60 * 1000\n  }\n\n  const legalBookingTime = () => {\n    const now = new Date()\n    const ahead24hrs = (selectedDate - now) / 3600000 >= 24 \n    const bookingTime = selectedDate.getTime() / 3600000\n    const between8And18 = bookingTime >= 8 && bookingTime <= 18\n\n    return ahead24hrs && between8And18\n  }\n\n  const checkBookingRules = () => {\n    let allAddOn = true\n    Object.keys(itemQty).forEach(id => {allAddOn = items[id].addOn && allAddOn})\n\n    if (pensionerRate && selectedDate.getDay() !== 1) {\n      alert('Sorry, pensioner rate is only available on Mondays.')\n      return false\n    } else if (allAddOn) {\n      alert('Sorry, add-on services* can not be booked on its own.')\n      return false\n    } else if (!artistBooking && !legalBookingTime()) {\n      alert('Please book appointments between 8am to 6pm at least 24 hours beforehand. If you need to book outside these hours, please call xxx.')\n      return false\n    }\n\n    return true\n  }\n\n  const handleSubmit = event => {\n\n    if (!checkBookingRules())\n      return\n\n    submitBooking(selectedDate, new Date(getBookingEnd()), address)\n\n    /*A workaround for redux-thunk error. When passing (itemQty, selectedDate, address) to getAvailArtist action creator,\n    *(itemQty, selectedDate, address) become undefined even though the values are still correct in mapDispatchToProps.\n    */\n    let url = available_artists_url + '?date=' + moment(selectedDate).format(\"YYYY-MM-DD\") + \n    '&start_time=' + moment(selectedDate).format(\"HH:mm\") + '&services=' + Object.keys(itemQty) +\n    '&quantities=' + Object.values(itemQty) + '&event_addr=' + address\n    \n    getAvailArtist(url)\n\n    changeSelectedArtist(0)\n    onSubmit(1)\n  }\n\n  const handleNext = event => {\n    if (!checkBookingRules())\n    return\n\n    submitBooking(selectedDate, new Date(getBookingEnd()), address)\n    onSubmit(1)\n  }\n\n  const handleCancel = () => {\n    setManageState('Default')\n  }\n\n  return (\n    <Container maxWidth=\"sm\" style={{paddingTop: 20, paddingBottom: 50}}>\n      <FormControlLabel\n        control={\n          <Switch checked={pensionerRate} onChange={() => togglePensionerRate()} value=\"pensionerRate\" color=\"primary\"/>\n        }\n        label=\"Monday pensioner rate (less 20%)\"\n      />\n      <FormControlLabel\n        control={\n          <Switch checked={organic} onChange={() => toggleOrganic()} value=\"organic\" color=\"primary\"/>\n        }\n        label=\"Use organic products\"\n      />\n      {cats.map( cat => \n        <ServiceMenu\n          theme={theme}\n          items={items}\n          key={cat.name}\n          cat={cat} \n          organic={organic}\n          pensioner={pensionerRate}\n          artistBooking={artistBooking}\n        />\n      )}\n      {artistBooking ? null : <Info/>}\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Grid container justify=\"space-between\">\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"dd/MM/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            label=\"Select booking date\"\n            value={selectedDate}\n            onChange={handleDateChange}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n          <KeyboardTimePicker\n            margin=\"normal\"\n            id=\"time-picker\"\n            label=\"Select booking time\"\n            value={selectedDate}\n            onChange={handleDateChange}\n            KeyboardButtonProps={{\n              'aria-label': 'change time',\n            }}\n          />\n        </Grid>\n      </MuiPickersUtilsProvider>\n      <LocationSearchInput address={address} changeAddr={handleAddrChange}/>\n      <div className={classes.flex}>\n        {!newBooking &&\n        <Button variant='text' color='primary' onClick={handleCancel}>\n          Cancel\n        </Button>}\n        <div className={classes.grow} />\n        <Button variant='text' color='primary' onClick={artistBooking ? handleNext : handleSubmit} size=\"large\" disabled={missingFields()}>\n          {artistBooking ? 'Next' : 'Submit'}\n        </Button>\n      </div>\n    </Container>\n  );\n}\n\nexport default ServiceSelection\n\n","import { connect } from 'react-redux'\nimport { toggleOrganic, togglePensionerRate, submitBooking, getAvailArtist, changeSelectedArtist } from '../actions/bookingCreator'\nimport ServiceSelection from '../components/ServiceSelection'\n\nconst mapStateToProps = state => {\n  return {\n    organic: state.priceFactors.organic,\n    pensionerRate: state.priceFactors.pensionerRate,\n    bookingDate: state.bookingDateAddr.bookingDate,\n    bookingAddr: state.bookingDateAddr.bookingAddr,\n    itemQty: state.itemQty\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      toggleOrganic: () => dispatch(toggleOrganic()),\n      togglePensionerRate: () => dispatch(togglePensionerRate()),\n      submitBooking: (date, bookingEnd, addr) => dispatch(submitBooking(date, bookingEnd, addr)),\n      getAvailArtist: (url) => dispatch(getAvailArtist(url)),\n      changeSelectedArtist: id => dispatch(changeSelectedArtist((id)))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceSelection)\n","import React from 'react'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\n\n\nfunction getSteps(newBooking) {\n  if (newBooking)\n    return ['Select service', 'Add people', 'Payment']\n  else\n    return ['Select service', 'Add people', 'Payment or Update']\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return 'Select service items, time and location'\n    case 1:\n      return 'Add artists and client to the booking'\n    case 2:\n      return 'Payment'\n    default:\n      return 'Unknown stepIndex'\n  }\n}\n\nexport default function ArtistBookingSteps(props) {\n  const { activeStep, newBooking } = props\n  const steps = getSteps(newBooking)\n\n  return (\n    <Container maxWidth=\"md\" style={{paddingTop: 20}}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Typography variant='h6' align='center' gutterBottom>{getStepContent(activeStep)}</Typography>\n    </Container>\n  )\n}","import React, { useState, useEffect } from \"react\"\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Chip from '@material-ui/core/Chip'\nimport DoneIcon from '@material-ui/icons/Done'\nimport AddArtists from './AddArtists'\nimport AddClient from './AddClient'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(3),\n    color: theme.palette.text.secondary,\n    background: \"linear-gradient(#f0e8e8, #e0d8d8)\",\n    width: '100%',\n    overflowX: 'auto'\n  },\n  flex: {\n    display: 'flex',\n    marginTop: 10\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  background: {\n    backgroundColor: theme.palette.primary.main\n  },\n  priceField: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline',\n    }\n  },\n  priceEmbedded: {\n    display: 'inline',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    }\n  },\n  acknowledge: {\n    display: 'flex',\n    marginTop: 20,\n    alignItems: 'flexStart'\n  },\n  inline: {\n    display: 'inline',\n    paddingTop: 0\n  }\n}))\n\nfunction AddPeople ({ \n  saveBooking,\n  assignedArtists, \n  clientInfo,\n  assignArtists,\n  assignClient,\n  bookingDate, \n  bookingEnd, \n  bookingAddr, \n  items, \n  itemQty, \n  changeBookingStage, \n  organic, \n  pensioner, \n  bookingValue, \n  depositPayable,\n  newBooking,\n  artists }) {\n\n  const [tags, setTags] = useState(assignedArtists.map(id => artists[id]))\n  const classes = useStyles()\n  const [disableNext, setDisableNext] = useState(true)\n  const [client, setClient] = useState(clientInfo.client)\n  \n  useEffect(() => {\n    if (tags.length > 0)\n      setDisableNext(false)\n    else\n      setDisableNext(true)\n  }, [tags])\n  \n  const ids = Object.keys(itemQty)\n\n  const handleBack = () => {\n    assignArtists(tags.map(tag => Number(tag.id)))\n    assignClient(client)\n    changeBookingStage(0)\n  }\n\n  const handleNext = () => {\n    assignArtists(tags.map(tag => Number(tag.id)))\n    assignClient(client)\n\n    const start_time = moment(bookingDate).format(\"HH:mm\")\n    const bookingData = {\n      artist_id_list: tags.map(tag => Number(tag.id)),\n      booking_date: moment(bookingDate).format(\"YYYY-MM-DD\"),\n      booking_time: start_time,\n      booking_end_time: moment(bookingEnd).format(\"HH:mm\"),\n      artist_start_time: start_time,\n      booking_id: newBooking? null : clientInfo.bookingId,\n      created_datetime: null,\n      event_address: bookingAddr,\n      quantities: Object.values(itemQty),\n      services: Object.keys(itemQty).map(id => Number(id)),\n      unit_prices: Object.keys(itemQty).map(id => items[id].price),\n      time_on_site: (bookingEnd - bookingDate) / 1000 / 60,\n      travel_distance: 0,\n      travel_duration: 0,\n      client_id: client.id,\n      with_organic: organic ? 1 : 0,\n      with_pensioner_rate: pensioner ? 1 : 0,\n      paid_balance_total: null,\n      paid_deposit_total: null,\n      total_amount: bookingValue, \n      paid_amount: newBooking? depositPayable : (bookingValue - clientInfo.paid), \n      paid_type: newBooking ? 'deposit' : 'balance', \n      comment: '',\n      status: ''\n    }\n  \n    saveBooking(bookingData)\n    changeBookingStage(2)\n  }\n\n  return (\n    <Container maxWidth=\"sm\" style={{paddingTop: 20, paddingBottom: 50}}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textPrimary\">\n          { moment(bookingDate).format(\"dddd, Do MMMM YYYY\") }\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          { `${moment(bookingDate).format('LT')} – ${moment(bookingEnd).format('LT')}` }\n        </Typography>\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableHead className={classes.background}>\n            <TableRow>\n              <TableCell align=\"left\" style={{width: \"70%\"}}>\n                <b>Booking location</b>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell align=\"left\">\n                {bookingAddr}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n        <br/>\n        <AddArtists\n          artists={artists}\n          multiArtists={true}\n          clearable={true}\n          setTags={setTags}\n          tags={tags}\n          label=\"Add artists\"\n        />\n        <br/>\n        <AddClient\n          setClient={setClient}\n          client={client}\n          label=\"Add client\"\n        />\n        <br/>\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableHead className={classes.background}>\n            <TableRow>\n              <TableCell align=\"left\" style={{width: \"70%\"}}>\n                <b>Services requested</b>\n              </TableCell>\n              <TableCell align=\"right\" style={{width: \"20%\", padding: 0}}>\n                <div className={classes.priceField}>\n                <b>Unit price</b>\n                </div>\n              </TableCell>\n              <TableCell align=\"right\" style={{width: \"10%\"}}>\n              <b>Qty</b>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ids.map(id => (\n              <TableRow key={id}>\n                <TableCell align=\"left\" style={{width: \"70%\"}}>\n                  {items[id].description}\n                  <div className={classes.priceEmbedded}>\n                    { ` - $${((organic ? items[id].organicPrice : items[id].price) * (pensioner ? 0.8 : 1)).toFixed(2)}` }\n                  </div>\n                </TableCell>\n                <TableCell align=\"right\" style={{width: \"20%\", padding: 0}}>\n                  <div className={classes.priceField}>\n                    { `$${((organic ? items[id].organicPrice : items[id].price) * (pensioner ? 0.8 : 1)).toFixed(2)}` }\n                  </div>\n                </TableCell>\n                <TableCell align=\"right\" style={{width: \"10%\"}}>\n                  {itemQty[id]} \n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        {pensioner ? <Chip deleteIcon={<DoneIcon/>} onDelete={()=> {}} label=\"Monday pensioner rate\" color='primary' size=\"small\"/> : null}\n        {organic ? <Chip deleteIcon={<DoneIcon/>} onDelete={()=> {}} label=\"Use organic products\" color='primary' size=\"small\"/> : null}\n        <hr></hr>\n        <Typography variant=\"subtitle2\" align=\"right\" color=\"textPrimary\">\n          { `TOTAL (GST INCL): $${bookingValue}` }\n        </Typography>\n      </Paper>\n      <div className={classes.flex}>\n        <Button variant=\"text\" color=\"primary\" size='large' onClick={handleBack}>\n          back\n        </Button>\n        <div className={classes.grow} />\n        <Button variant=\"text\" color=\"primary\" size='large' onClick={handleNext} \n          disabled={disableNext}\n        >\n          confirm booking\n        </Button>\n      </div>\n    </Container>\n  )\n}\n\nexport default AddPeople","import { connect } from 'react-redux'\nimport { assignArtists, assignClient, saveBooking } from '../actions/bookingCreator'\nimport AddPeople from '../components/AddPeople'\n\nconst mapStateToProps = state => {\n  return {\n    assignedArtists: state.assignedArtists,\n    bookingDate: state.bookingDateAddr.bookingDate,\n    bookingEnd: state.bookingDateAddr.bookingEnd,\n    bookingAddr: state.bookingDateAddr.bookingAddr,\n    itemQty: state.itemQty,\n    organic: state.priceFactors.organic,\n    pensioner: state.priceFactors.pensionerRate,\n    clientInfo: state.clientInfo\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    assignArtists: artistsIds => dispatch(assignArtists(artistsIds)),\n    assignClient: client => dispatch(assignClient(client)),\n    saveBooking: (bookingData) => dispatch(saveBooking(bookingData)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPeople)\n","import React, { useState } from 'react'\nimport StripeForm from './StripeForm'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\nimport { stripe_charge_server } from '../config/dataLinks'\nconst stripePublicKey = process.env.REACT_APP_STRIPE_PUBLIC_KEY\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(3),\n    color: theme.palette.text.secondary,\n    background: \"linear-gradient(#f0e8e8, #e0d8d8)\",\n    width: '100%',\n    overflowX: 'auto'\n  },\n  textField : {\n    width: \"100%\",\n    marginTop: 30\n  },\n  flex: {\n    display: 'flex',\n    marginTop: 10\n  },\n  container: {\n    display: 'flex'\n  },\n  grow: {\n    flexGrow: 1,\n  }\n}))\n\nfunction ArtistPayment({\n  theme, \n  changeBookingStage, \n  depositPayable, \n  resetBooking, \n  addBooking, \n  updateBooking,\n  bookingData, \n  newBooking,\n  manageState,\n  setManageState,\n  comment\n  }) {\n  const [value, setValue] = useState(comment)\n\n  //This booking has been checked out. No payment or update is allowed.\n  const checkOutable = newBooking || bookingData.paid_amount > 0\n\n  const classes = useStyles()\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  }\n\n  const successNotification = (message) => {\n    // const message = newBooking ? \"Booking successful!\" : \"Checkout successful!\"\n    alert(`${message} successful!`)\n    resetBooking()\n  }\n\n  const submit = async (token) => {\n    const response = await fetch(stripe_charge_server, {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        id: token.id,\n        description: `${bookingData.client_id} ${newBooking ? \"deposit\" : \"balance\"} for booking on ${bookingData.booking_date}`,\n        amount: (bookingData.paid_amount * 100).toFixed(0)\n      })\n    });\n  \n    if (response.ok) {\n      if (newBooking) \n        addBooking({...bookingData, comment: value}, () => successNotification(\"Booking\"))\n      else\n        updateBooking({...bookingData, comment: value}, () => successNotification(\"Checkout\"))\n    }\n    else {\n      alert(\"Stripe error. Please call to resolve this issue.\")\n    }\n  }\n\n  const handleUpdate = () => {\n    updateBooking({...bookingData, paid_amount: 0, paid_type: \"none\", comment: value}, () => successNotification(\"Update\"))\n  }\n\n  const handleCashPay = () => {\n    updateBooking({...bookingData, paid_type: \"cash\", comment: value}, () => successNotification(\"Checkout\"))\n  }\n\n  return (\n    <Container maxWidth=\"sm\" style={{paddingTop: 20, paddingBottom: 20}}>\n      <Paper className={classes.paper}>\n        {newBooking ?\n          <Typography variant=\"body1\" align=\"left\" color=\"textPrimary\" gutterBottom>\n            Deposit payable: $ {depositPayable.toString()}\n          </Typography>\n          :\n          <Typography variant=\"body1\" align=\"left\" color=\"textPrimary\" gutterBottom>\n            Balance payable: $ {bookingData.paid_amount.toString()}\n          </Typography>\n        }\n        {checkOutable && \n          <StripeForm stripePublicKey={stripePublicKey} handleCharge={submit} loggedIn={true} payMessage=\"Client Pay\"/>}\n        {!newBooking && checkOutable &&\n          <>\n            <div className={classes.container}>\n              <div className={classes.grow} />\n              <p>OR</p>\n              <div className={classes.grow} />\n            </div>\n            <Button variant=\"contained\" onClick={handleCashPay} color=\"primary\" fullWidth>\n              Cash Pay\n            </Button>\n          </>\n        }\n        <TextField\n          id=\"outlined-textarea\"\n          label=\"Additional instructions\"\n          placeholder=\"Any allergies, preferences, entrances,\n          or any details about the room number if the client is\n          staying in a hotel.\"\n          multiline\n          value={value}\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n      </Paper>\n      <div className={classes.flex}>\n        {manageState === 'Checkout' ?\n          <Button variant=\"text\" color=\"primary\" size='large' onClick={() => setManageState('Default')}>\n            Cancel\n          </Button>\n          :\n          <Button variant=\"text\" color=\"primary\" size='large' onClick={() => changeBookingStage(1)}>\n            back\n          </Button>}\n        <div className={classes.grow} />\n        {!newBooking && manageState !== 'Checkout' && checkOutable &&\n        <Button variant=\"text\" color=\"primary\" size='large' onClick={handleUpdate}>\n          Update Booking\n        </Button>}\n      </div>\n    </Container>\n  )\n}\n\nexport default ArtistPayment","import { connect } from 'react-redux'\nimport { resetBooking, addBooking, updateBooking } from '../actions/bookingCreator'\nimport ArtistPayment from '../components/ArtistPayment'\n\nconst mapStateToProps = state => {\n  return {\n    bookingData: state.storeActivation.bookingData,\n    comment: state.clientInfo.comment\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetBooking: () => dispatch(resetBooking()),\n    addBooking: (bookingInfo, callMe) => dispatch(addBooking(bookingInfo, callMe)),\n    updateBooking: (bookingInfo, callMe) => dispatch(updateBooking(bookingInfo, callMe))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArtistPayment)","import React, { useEffect } from \"react\"\nimport { withRouter } from 'react-router-dom'\nimport ServiceSelection from '../config/ServiceSelectionContainer'\nimport ArtistBookingSteps from '../components/ArtistBookingSteps'\nimport AddPeople from '../config/AddPeopleContainer'\nimport ArtistPayment from '../config/ArtistPaymentContainer'\n\nconst ArtistBooking = ({ \n  bookingStage, \n  changeBookingStage, \n  resetBooking, \n  services, \n  theme, \n  bookingValue, \n  depositPayable, \n  artists, \n  newBooking, \n  manageState, \n  setManageState }) => {\n\n  useEffect(() => {\n    if (newBooking)\n      resetBooking()\n  }, [])\n\n  return (\n    <React.Fragment>\n      {manageState === 'Checkout' ?\n      null\n      : <ArtistBookingSteps activeStep={bookingStage} newBooking={newBooking}/>}\n      {bookingStage === 0 ? \n        <ServiceSelection \n        onSubmit={changeBookingStage} \n        services={services} \n        theme={theme} \n        artistBooking={true}\n        newBooking={newBooking}\n        setManageState={setManageState}/> \n        : null\n      }\n      {bookingStage === 1 ? \n        <AddPeople \n          changeBookingStage={changeBookingStage} \n          theme={theme} \n          items={services.items} \n          bookingValue={bookingValue}\n          depositPayable={depositPayable}\n          newBooking={newBooking}\n          artists={artists}/> \n        : null\n      }\n      {bookingStage === 2 ? <ArtistPayment \n        changeBookingStage={changeBookingStage} \n        theme={theme} \n        items={services.items} \n        bookingValue={bookingValue}\n        depositPayable={depositPayable} \n        bookingValue={bookingValue}\n        newBooking={newBooking}\n        manageState={manageState}\n        setManageState={setManageState}/>\n        : null\n      }\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(ArtistBooking)\n"],"sourceRoot":""}